[2022-05-17T11:30:52.800667+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/template/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/template/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:08:16.086386+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:08:16.104548+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-17T12:08:16.134488+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:08:16.147937+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:08:16.215868+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e7dd62"},"request_uri":"https://localhost:8000/_wdt/e7dd62","method":"GET"} []
[2022-05-17T12:08:16.218591+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:08:59.549973+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:08:59.550862+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-17T12:08:59.552378+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:08:59.562910+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:08:59.606489+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"70687d"},"request_uri":"https://localhost:8000/_wdt/70687d","method":"GET"} []
[2022-05-17T12:08:59.607076+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:14:25.203415+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:14:25.222237+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:186)"} []
[2022-05-17T12:14:25.255053+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:14:25.266444+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:14:25.335516+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2440e6"},"request_uri":"https://localhost:8000/_wdt/2440e6","method":"GET"} []
[2022-05-17T12:14:25.338489+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:15:01.035832+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:15:01.036480+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/route"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:15:01.089726+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:15:01.099086+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:15:01.100044+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:15:01.112501+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:15:01.226008+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"cded2e"},"request_uri":"https://localhost:8000/_wdt/cded2e","method":"GET"} []
[2022-05-17T12:15:01.226395+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:15:14.850695+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:15:14.869369+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/route"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:15:14.941481+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:15:14.952299+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:15:14.952961+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:15:14.962380+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:15:15.042298+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8d0eea"},"request_uri":"https://localhost:8000/_wdt/8d0eea","method":"GET"} []
[2022-05-17T12:15:15.044132+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:15:15.698605+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:15:15.699131+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/route"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:15:15.712970+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:15:15.722142+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:15:15.723383+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:15:15.731754+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:15:15.828614+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"53ec6b"},"request_uri":"https://localhost:8000/_wdt/53ec6b","method":"GET"} []
[2022-05-17T12:15:15.829282+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:15:16.197009+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:15:16.197561+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/route"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:15:16.210677+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:15:16.219594+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:15:16.220682+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:15:16.231236+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:15:16.330071+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"f261fc"},"request_uri":"https://localhost:8000/_wdt/f261fc","method":"GET"} []
[2022-05-17T12:15:16.330527+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:15:16.394475+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:15:16.394994+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/route"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:15:16.408756+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:15:16.417441+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:15:16.418001+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:15:16.427555+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:15:16.528521+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"327970"},"request_uri":"https://localhost:8000/_wdt/327970","method":"GET"} []
[2022-05-17T12:15:16.528842+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:15:16.579248+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:15:16.579771+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/route"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:15:16.596631+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:15:16.606717+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:15:16.607307+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:15:16.615567+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:15:16.716117+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a3bdfd"},"request_uri":"https://localhost:8000/_wdt/a3bdfd","method":"GET"} []
[2022-05-17T12:15:16.716391+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:15:53.849514+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:15:53.850193+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/route"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:15:53.863786+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:15:53.872957+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:15:53.873845+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:15:53.881735+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:15:53.958641+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b23df4"},"request_uri":"https://localhost:8000/_wdt/b23df4","method":"GET"} []
[2022-05-17T12:15:53.958945+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:15:58.928023+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:15:58.946822+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/route"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:15:59.022101+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:15:59.032663+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:15:59.033618+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:15:59.043063+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:15:59.120260+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b3fa91"},"request_uri":"https://localhost:8000/_wdt/b3fa91","method":"GET"} []
[2022-05-17T12:15:59.121942+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:15:59.619425+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:15:59.620682+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/route"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:15:59.640097+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:15:59.648730+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:15:59.649647+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:15:59.658287+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:15:59.760620+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a670b7"},"request_uri":"https://localhost:8000/_wdt/a670b7","method":"GET"} []
[2022-05-17T12:15:59.760961+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:15:59.794165+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:15:59.794887+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/route"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:15:59.808610+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:15:59.819064+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:15:59.819743+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:15:59.828199+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:15:59.930173+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"16ee6b"},"request_uri":"https://localhost:8000/_wdt/16ee6b","method":"GET"} []
[2022-05-17T12:15:59.930904+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:15:59.972779+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:15:59.973492+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/route"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:15:59.987319+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:15:59.996340+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:15:59.997369+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:16:00.010182+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:16:00.095115+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c263a6"},"request_uri":"https://localhost:8000/_wdt/c263a6","method":"GET"} []
[2022-05-17T12:16:00.095388+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:16:00.144598+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:16:00.145135+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/route"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:16:00.158780+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:16:00.168633+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:16:00.169376+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:16:00.178041+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:16:00.285436+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"22a546"},"request_uri":"https://localhost:8000/_wdt/22a546","method":"GET"} []
[2022-05-17T12:16:00.285803+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:16:00.319348+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:16:00.320091+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/route"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:16:00.334226+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:16:00.343326+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:16:00.343921+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:16:00.353630+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:16:00.459055+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d5e40e"},"request_uri":"https://localhost:8000/_wdt/d5e40e","method":"GET"} []
[2022-05-17T12:16:00.459343+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:16:00.631829+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:16:00.632870+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/route"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:16:00.645744+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:16:00.655997+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:16:00.656585+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:16:00.664828+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:16:00.769274+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3af2a8"},"request_uri":"https://localhost:8000/_wdt/3af2a8","method":"GET"} []
[2022-05-17T12:16:00.769612+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:16:00.942190+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:16:00.942722+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/route"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:16:00.955968+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:16:00.965131+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:16:00.966209+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:16:00.974652+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:16:01.066821+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ba4718"},"request_uri":"https://localhost:8000/_wdt/ba4718","method":"GET"} []
[2022-05-17T12:16:01.067415+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:16:01.095351+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:16:01.096031+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/route"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:16:01.111706+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:16:01.124438+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:16:01.125081+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:16:01.134832+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:16:01.213138+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"bbee77"},"request_uri":"https://localhost:8000/_wdt/bbee77","method":"GET"} []
[2022-05-17T12:16:01.214050+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:16:01.453862+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:16:01.454418+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/route"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:16:01.467317+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:16:01.476514+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:16:01.477068+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"symfony","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"app","serverVersion":"13","charset":"utf8"}} []
[2022-05-17T12:16:01.486415+03:00] app.ERROR: error while trying to collect executed migrations {"exception":"[object] (Doctrine\\DBAL\\Exception\\ConnectionException(code: 7): An exception occurred in the driver: SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:81)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 7): SQLSTATE[08006] [7] connection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\"\nconnection to server at \"127.0.0.1\", port 5432 failed: FATAL:  password authentication failed for user \"symfony\" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/PgSQL/Driver.php:28)"} []
[2022-05-17T12:16:01.588572+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b0ec96"},"request_uri":"https://localhost:8000/_wdt/b0ec96","method":"GET"} []
[2022-05-17T12:16:01.588922+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:16:17.044038+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:16:17.044645+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/route"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:16:17.059431+03:00] request.CRITICAL: Exception thrown when handling an exception (Symfony\Component\DependencyInjection\Exception\EnvNotFoundException: Environment variable not found: "DATABASE_URL". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/dependency-injection/EnvVarProcessor.php line 172) {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\EnvNotFoundException(code: 0): Environment variable not found: \"DATABASE_URL\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/dependency-injection/EnvVarProcessor.php:172)"} []
[2022-05-17T12:16:17.060009+03:00] php.CRITICAL: Uncaught Exception: Environment variable not found: "DATABASE_URL". {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\EnvNotFoundException(code: 0): Environment variable not found: \"DATABASE_URL\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/dependency-injection/EnvVarProcessor.php:172)\n[previous exception] [object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:16:17.062030+03:00] request.CRITICAL: Uncaught PHP Exception Symfony\Component\DependencyInjection\Exception\EnvNotFoundException: "Environment variable not found: "DATABASE_URL"." at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/dependency-injection/EnvVarProcessor.php line 172 {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\EnvNotFoundException(code: 0): Environment variable not found: \"DATABASE_URL\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/dependency-injection/EnvVarProcessor.php:172)\n[previous exception] [object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:16:17.107230+03:00] request.CRITICAL: Exception thrown when handling an exception (Symfony\Component\DependencyInjection\Exception\EnvNotFoundException: Environment variable not found: "DATABASE_URL". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/dependency-injection/EnvVarProcessor.php line 172) {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\EnvNotFoundException(code: 0): Environment variable not found: \"DATABASE_URL\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/dependency-injection/EnvVarProcessor.php:172)"} []
[2022-05-17T12:16:17.107307+03:00] php.CRITICAL: Uncaught Exception: Environment variable not found: "DATABASE_URL". {"exception":"[object] (Symfony\\Component\\DependencyInjection\\Exception\\EnvNotFoundException(code: 0): Environment variable not found: \"DATABASE_URL\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/dependency-injection/EnvVarProcessor.php:172)\n[previous exception] [object] (Symfony\\Component\\DependencyInjection\\Exception\\EnvNotFoundException(code: 0): Environment variable not found: \"DATABASE_URL\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/dependency-injection/EnvVarProcessor.php:172)\n[previous exception] [object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:16:41.620564+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:16:41.621249+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/route"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:16:41.634125+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"}} []
[2022-05-17T12:16:41.641610+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T12:16:41.645401+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T12:16:41.646099+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T12:16:41.646453+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T12:16:41.658247+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:16:41.658573+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T12:16:41.661968+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:16:41.662362+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T12:16:41.663066+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:16:41.663178+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T12:16:41.664056+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=81034 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=81034 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T12:16:41.664376+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T12:16:41.667074+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T12:16:41.668281+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:16:41.677227+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T12:16:41.778668+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"359cb4"},"request_uri":"https://localhost:8000/_wdt/359cb4","method":"GET"} []
[2022-05-17T12:16:41.779197+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:17:24.869354+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:17:24.871304+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/route"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:17:24.888239+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"}} []
[2022-05-17T12:17:24.895003+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T12:17:24.897021+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T12:17:24.897422+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T12:17:24.897562+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T12:17:24.898353+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:17:24.898465+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T12:17:24.899736+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:17:24.899857+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T12:17:24.900208+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:17:24.900303+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T12:17:24.900946+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=81034 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=81034 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T12:17:24.901354+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T12:17:24.901743+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T12:17:24.902260+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:17:24.913956+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T12:17:25.009757+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a195fe"},"request_uri":"https://localhost:8000/_wdt/a195fe","method":"GET"} []
[2022-05-17T12:17:25.010298+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:17:34.010696+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:17:34.012153+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/route"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:17:34.031792+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"}} []
[2022-05-17T12:17:34.038011+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T12:17:34.040074+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T12:17:34.040367+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T12:17:34.040469+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T12:17:34.041547+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:17:34.041725+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T12:17:34.043008+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:17:34.043086+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T12:17:34.043386+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:17:34.043450+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T12:17:34.043987+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=81034 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=81034 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T12:17:34.044261+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T12:17:34.044557+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T12:17:34.044986+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:17:34.055168+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T12:17:34.148963+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7da728"},"request_uri":"https://localhost:8000/_wdt/7da728","method":"GET"} []
[2022-05-17T12:17:34.149691+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:18:04.724380+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:18:04.743126+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/route"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:18:04.810925+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"}} []
[2022-05-17T12:18:04.821973+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T12:18:04.825805+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T12:18:04.826379+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T12:18:04.826560+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T12:18:04.832073+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:18:04.832582+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T12:18:04.834888+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:18:04.835117+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T12:18:04.835721+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:18:04.835814+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T12:18:04.836483+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=81034 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=81034 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T12:18:04.836924+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T12:18:04.839043+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T12:18:04.840538+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:18:04.861626+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T12:18:04.976126+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"1b6ed0"},"request_uri":"https://localhost:8000/_wdt/1b6ed0","method":"GET"} []
[2022-05-17T12:18:04.978171+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:18:05.251398+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:18:05.252840+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/route"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:18:05.271340+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"}} []
[2022-05-17T12:18:05.277805+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T12:18:05.279933+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T12:18:05.280313+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T12:18:05.280407+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T12:18:05.281547+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:18:05.281685+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T12:18:05.283063+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:18:05.283157+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T12:18:05.283601+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:18:05.283685+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T12:18:05.284349+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=81034 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=81034 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T12:18:05.284634+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T12:18:05.284955+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T12:18:05.285759+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:18:05.296581+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T12:18:05.379326+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d7d20c"},"request_uri":"https://localhost:8000/_wdt/d7d20c","method":"GET"} []
[2022-05-17T12:18:05.379718+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:18:05.946305+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:18:05.946828+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/route"" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/route\" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/route/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T12:18:05.959557+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"}} []
[2022-05-17T12:18:05.966008+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T12:18:05.968086+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T12:18:05.968673+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T12:18:05.968815+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T12:18:05.970168+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:18:05.970433+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T12:18:05.972658+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:18:05.972885+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T12:18:05.973482+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:18:05.973594+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T12:18:05.974267+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=81034 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=81034 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T12:18:05.974569+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T12:18:05.975062+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T12:18:05.975533+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:18:05.984117+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T12:18:06.070925+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c87627"},"request_uri":"https://localhost:8000/_wdt/c87627","method":"GET"} []
[2022-05-17T12:18:06.071414+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerJwxM59j/App_KernelDevDebugContainer.php","line":1024,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:18:55.634201+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/de_/ContainerE9cMfux/App_KernelDevDebugContainer.php","line":1025,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:19:12.705358+03:00] request.INFO: Matched route "app_base". {"route":"app_base","route_parameters":{"_route":"app_base","_controller":"App\\Controller\\FirstController::index"},"request_uri":"https://localhost:8000/route","method":"GET"} []
[2022-05-17T12:19:12.709969+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T12:19:12.715793+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerE9cMfux/App_KernelDevDebugContainer.php","line":1025,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:19:12.732346+03:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Could not find the entrypoints file from Webpack: the file "/home/durandal/Documents/GitHub/web-design-2/public/build/entrypoints.json" does not exist.")." at /home/durandal/Documents/GitHub/web-design-2/templates/base.html.twig line 9 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Could not find the entrypoints file from Webpack: the file \"/home/durandal/Documents/GitHub/web-design-2/public/build/entrypoints.json\" does not exist.\"). at /home/durandal/Documents/GitHub/web-design-2/templates/base.html.twig:9)\n[previous exception] [object] (InvalidArgumentException(code: 0): Could not find the entrypoints file from Webpack: the file \"/home/durandal/Documents/GitHub/web-design-2/public/build/entrypoints.json\" does not exist. at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/webpack-encore-bundle/src/Asset/EntrypointLookup.php:124)"} []
[2022-05-17T12:19:12.831130+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"}} []
[2022-05-17T12:19:12.841482+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T12:19:12.845731+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T12:19:12.846522+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T12:19:12.846678+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T12:19:12.853093+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:19:12.853418+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T12:19:12.855174+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:19:12.855307+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T12:19:12.855657+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:19:12.855725+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T12:19:12.856273+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=81034 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=81034 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T12:19:12.856529+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T12:19:12.858313+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T12:19:12.859751+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:19:12.880571+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T12:19:13.020833+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c7cc3a"},"request_uri":"https://localhost:8000/_wdt/c7cc3a","method":"GET"} []
[2022-05-17T12:19:13.022626+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerE9cMfux/App_KernelDevDebugContainer.php","line":1025,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:21:44.725778+03:00] request.INFO: Matched route "app_base". {"route":"app_base","route_parameters":{"_route":"app_base","_controller":"App\\Controller\\FirstController::index"},"request_uri":"https://localhost:8000/route","method":"GET"} []
[2022-05-17T12:21:44.730786+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T12:21:44.735334+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerE9cMfux/App_KernelDevDebugContainer.php","line":1025,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:21:44.778462+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"}} []
[2022-05-17T12:21:44.788543+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T12:21:44.791918+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T12:21:44.792394+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T12:21:44.792538+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T12:21:44.798701+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:21:44.798988+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T12:21:44.800874+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:21:44.801077+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T12:21:44.801642+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:21:44.801832+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T12:21:44.802446+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=81034 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=81034 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T12:21:44.802689+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T12:21:44.804177+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T12:21:44.805567+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:21:44.822815+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T12:21:44.871303+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"c3ccee"},"request_uri":"https://localhost:8000/_wdt/c3ccee","method":"GET"} []
[2022-05-17T12:21:44.873681+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerE9cMfux/App_KernelDevDebugContainer.php","line":1025,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:21:54.616520+03:00] request.INFO: Matched route "app_base". {"route":"app_base","route_parameters":{"_route":"app_base","_controller":"App\\Controller\\FirstController::index"},"request_uri":"https://localhost:8000/","method":"GET"} []
[2022-05-17T12:21:54.617160+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T12:21:54.618051+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerE9cMfux/App_KernelDevDebugContainer.php","line":1025,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:21:54.621010+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"}} []
[2022-05-17T12:21:54.627895+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T12:21:54.630243+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T12:21:54.630643+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T12:21:54.630739+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T12:21:54.632014+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:21:54.632328+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T12:21:54.634525+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:21:54.634734+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T12:21:54.635281+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:21:54.635368+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T12:21:54.636072+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=81034 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=81034 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T12:21:54.636329+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T12:21:54.636649+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T12:21:54.637592+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T12:21:54.644986+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T12:21:54.686903+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"ccf1b5"},"request_uri":"https://localhost:8000/_wdt/ccf1b5","method":"GET"} []
[2022-05-17T12:21:54.687692+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerE9cMfux/App_KernelDevDebugContainer.php","line":1025,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:38:42.371990+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerXTxXqkm/App_KernelDevDebugContainer.php","line":1025,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:39:03.332099+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerXTxXqkm/App_KernelDevDebugContainer.php","line":1025,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T12:42:18.700353+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerXTxXqkm/App_KernelDevDebugContainer.php","line":1025,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T13:06:52.089489+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"}} []
[2022-05-17T13:06:52.146383+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T13:07:21.518193+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"}} []
[2022-05-17T13:07:48.713527+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T13:07:51.573064+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"}} []
[2022-05-17T13:10:35.444297+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"127.0.0.1","port":5432,"user":"postgres","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"eval","charset":"utf8"}} []
[2022-05-17T13:11:08.542157+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T13:12:25.344504+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerU9FW6Iz/App_KernelDevDebugContainer.php","line":1069,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T13:20:30.090801+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T13:20:33.135045+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T13:20:33.437550+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T13:20:33.741637+03:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2022-05-17T13:20:34.039941+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:20:34.338715+03:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                         increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'd2hs8u73qk6i55'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value, \n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'd2hs8u73qk6i55'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2022-05-17T13:20:34.640961+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T13:20:34.951635+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T13:20:35.264164+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T13:20:35.581893+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T13:20:50.474817+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T13:20:52.606790+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:21:25.972588+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T13:21:26.346966+03:00] doctrine.DEBUG: Executing statement: CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version)) {"sql":"CREATE TABLE doctrine_migration_versions (version VARCHAR(191) NOT NULL, executed_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, execution_time INT DEFAULT NULL, PRIMARY KEY(version))"} []
[2022-05-17T13:21:26.656193+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T13:21:26.953346+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T13:21:27.293091+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T13:21:27.610091+03:00] doctrine.DEBUG: Beginning transaction [] []
[2022-05-17T13:21:27.932454+03:00] doctrine.DEBUG: Executing query: CREATE SEQUENCE article_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"CREATE SEQUENCE article_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2022-05-17T13:21:28.236773+03:00] doctrine.DEBUG: Executing query: CREATE SEQUENCE category_id_seq INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"CREATE SEQUENCE category_id_seq INCREMENT BY 1 MINVALUE 1 START 1"} []
[2022-05-17T13:21:28.541911+03:00] doctrine.DEBUG: Executing query: CREATE SEQUENCE "user_id_seq" INCREMENT BY 1 MINVALUE 1 START 1 {"sql":"CREATE SEQUENCE \"user_id_seq\" INCREMENT BY 1 MINVALUE 1 START 1"} []
[2022-05-17T13:21:28.853959+03:00] doctrine.DEBUG: Executing query: CREATE TABLE article (id INT NOT NULL, category_id INT NOT NULL, header VARCHAR(255) NOT NULL, title VARCHAR(255) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, content TEXT NOT NULL, url_path VARCHAR(255) NOT NULL, sum_up VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE article (id INT NOT NULL, category_id INT NOT NULL, header VARCHAR(255) NOT NULL, title VARCHAR(255) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, content TEXT NOT NULL, url_path VARCHAR(255) NOT NULL, sum_up VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2022-05-17T13:21:29.162936+03:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_23A0E6612469DE2 ON article (category_id) {"sql":"CREATE INDEX IDX_23A0E6612469DE2 ON article (category_id)"} []
[2022-05-17T13:21:29.473869+03:00] doctrine.DEBUG: Executing query: COMMENT ON COLUMN article.created_at IS '(DC2Type:datetime_immutable)' {"sql":"COMMENT ON COLUMN article.created_at IS '(DC2Type:datetime_immutable)'"} []
[2022-05-17T13:21:29.773016+03:00] doctrine.DEBUG: Executing query: CREATE TABLE category (id INT NOT NULL, entitled VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE category (id INT NOT NULL, entitled VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2022-05-17T13:21:30.077966+03:00] doctrine.DEBUG: Executing query: CREATE TABLE "user" (id INT NOT NULL, email VARCHAR(180) NOT NULL, roles JSON NOT NULL, password VARCHAR(255) NOT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE \"user\" (id INT NOT NULL, email VARCHAR(180) NOT NULL, roles JSON NOT NULL, password VARCHAR(255) NOT NULL, PRIMARY KEY(id))"} []
[2022-05-17T13:21:30.387896+03:00] doctrine.DEBUG: Executing query: CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON "user" (email) {"sql":"CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON \"user\" (email)"} []
[2022-05-17T13:21:30.910815+03:00] doctrine.DEBUG: Executing query: CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id)) {"sql":"CREATE TABLE messenger_messages (id BIGSERIAL NOT NULL, body TEXT NOT NULL, headers TEXT NOT NULL, queue_name VARCHAR(190) NOT NULL, created_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, available_at TIMESTAMP(0) WITHOUT TIME ZONE NOT NULL, delivered_at TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, PRIMARY KEY(id))"} []
[2022-05-17T13:21:31.212828+03:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name) {"sql":"CREATE INDEX IDX_75EA56E0FB7336F0 ON messenger_messages (queue_name)"} []
[2022-05-17T13:21:31.513840+03:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at) {"sql":"CREATE INDEX IDX_75EA56E0E3BD61CE ON messenger_messages (available_at)"} []
[2022-05-17T13:21:31.815679+03:00] doctrine.DEBUG: Executing query: CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at) {"sql":"CREATE INDEX IDX_75EA56E016BA31DB ON messenger_messages (delivered_at)"} []
[2022-05-17T13:21:32.278845+03:00] doctrine.DEBUG: Executing query: CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$             BEGIN                 PERFORM pg_notify('messenger_messages', NEW.queue_name::text);                 RETURN NEW;             END;         $$ LANGUAGE plpgsql; {"sql":"CREATE OR REPLACE FUNCTION notify_messenger_messages() RETURNS TRIGGER AS $$\n            BEGIN\n                PERFORM pg_notify('messenger_messages', NEW.queue_name::text);\n                RETURN NEW;\n            END;\n        $$ LANGUAGE plpgsql;"} []
[2022-05-17T13:21:32.573725+03:00] doctrine.DEBUG: Executing query: DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages; {"sql":"DROP TRIGGER IF EXISTS notify_trigger ON messenger_messages;"} []
[2022-05-17T13:21:32.879867+03:00] doctrine.DEBUG: Executing query: CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages(); {"sql":"CREATE TRIGGER notify_trigger AFTER INSERT OR UPDATE ON messenger_messages FOR EACH ROW EXECUTE PROCEDURE notify_messenger_messages();"} []
[2022-05-17T13:21:33.182774+03:00] doctrine.DEBUG: Executing query: ALTER TABLE article ADD CONSTRAINT FK_23A0E6612469DE2 FOREIGN KEY (category_id) REFERENCES category (id) NOT DEFERRABLE INITIALLY IMMEDIATE {"sql":"ALTER TABLE article ADD CONSTRAINT FK_23A0E6612469DE2 FOREIGN KEY (category_id) REFERENCES category (id) NOT DEFERRABLE INITIALLY IMMEDIATE"} []
[2022-05-17T13:21:33.486138+03:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20220517102033","2":"2022-05-17 13:21:27","3":5572}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20220517102033","2":"2022-05-17 13:21:27","3":5572},"types":{"1":2,"2":2,"3":1}} []
[2022-05-17T13:21:33.773308+03:00] doctrine.DEBUG: Committing transaction [] []
[2022-05-17T13:21:34.068268+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T13:25:41.691239+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerDbl0iYu/App_KernelDevDebugContainer.php","line":1069,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T13:26:56.206115+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerIxOyIPT/App_KernelDevDebugContainer.php","line":1069,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T13:29:00.226161+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T13:29:12.402304+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T13:31:41.132822+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T13:31:43.327922+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T13:31:43.664317+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T13:31:43.972733+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T13:31:44.280982+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T13:31:44.596724+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:31:44.901796+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T13:31:45.224653+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:31:45.539756+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T13:31:45.840716+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:31:46.149955+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T13:31:46.461849+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T13:31:46.781844+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T13:31:47.092959+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T13:31:47.404735+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T13:31:47.719869+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T13:31:48.033147+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:31:48.350619+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T13:31:48.667814+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:31:48.982778+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T13:31:49.293809+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:31:49.610677+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T13:31:49.926745+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T13:31:50.231766+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T13:31:50.540980+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T13:31:50.875458+03:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2022-05-17T13:31:51.182766+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:31:51.498597+03:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                         increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'd2hs8u73qk6i55'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value, \n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'd2hs8u73qk6i55'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2022-05-17T13:31:51.814208+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T13:31:52.123033+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T13:31:52.430774+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T13:31:52.749676+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:31:53.051650+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T13:31:53.371793+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:31:53.681700+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T13:31:53.991007+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:31:54.300701+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T13:31:54.620863+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T13:31:54.930932+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T13:31:55.241941+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:31:55.550936+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'user' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'user' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T13:31:55.876994+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:31:56.189743+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'user' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'user' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T13:31:56.499779+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:31:56.809606+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'user' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'user' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T13:31:57.113822+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742406 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742406 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T13:31:57.432916+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742406 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742406 AND attnum IN (2) ORDER BY attnum ASC"} []
[2022-05-17T13:31:57.748885+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('"user"'::regclass) AS table_comment; {"sql":"SELECT obj_description('\"user\"'::regclass) AS table_comment;"} []
[2022-05-17T13:31:58.070840+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:31:58.388771+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'messenger_messages' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'messenger_messages' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T13:31:58.702158+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:31:59.010902+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'messenger_messages' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'messenger_messages' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T13:31:59.344749+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:31:59.659803+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'messenger_messages' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'messenger_messages' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T13:31:59.962941+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742415 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742415 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T13:32:00.278889+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742415 AND attnum IN (4) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742415 AND attnum IN (4) ORDER BY attnum ASC"} []
[2022-05-17T13:32:00.581600+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742415 AND attnum IN (6) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742415 AND attnum IN (6) ORDER BY attnum ASC"} []
[2022-05-17T13:32:00.891837+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742415 AND attnum IN (7) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742415 AND attnum IN (7) ORDER BY attnum ASC"} []
[2022-05-17T13:32:01.217026+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('messenger_messages'::regclass) AS table_comment; {"sql":"SELECT obj_description('messenger_messages'::regclass) AS table_comment;"} []
[2022-05-17T13:32:01.521690+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:32:01.833033+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'category' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'category' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T13:32:02.151058+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:32:02.460938+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'category' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'category' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T13:32:02.781855+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:32:03.091681+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'category' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'category' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T13:32:03.409820+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742401 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742401 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T13:32:03.721653+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('category'::regclass) AS table_comment; {"sql":"SELECT obj_description('category'::regclass) AS table_comment;"} []
[2022-05-17T13:32:04.039636+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:32:04.341789+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'article' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'article' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T13:32:04.669926+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:32:04.993797+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'article' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'article' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T13:32:05.302260+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:32:05.623819+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'article' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'article' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T13:32:05.933988+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742393 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742393 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T13:32:06.264979+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742393 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742393 AND attnum IN (2) ORDER BY attnum ASC"} []
[2022-05-17T13:32:06.580816+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('article'::regclass) AS table_comment; {"sql":"SELECT obj_description('article'::regclass) AS table_comment;"} []
[2022-05-17T13:32:06.911229+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T13:32:07.221007+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T13:32:07.534435+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T13:32:39.678047+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T13:32:41.893314+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:32:45.362902+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T13:32:45.689837+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T13:32:45.990830+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T13:32:46.346498+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:32:46.651841+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T13:32:46.976766+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:32:47.280889+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T13:32:47.599763+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:32:47.909729+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T13:32:48.212454+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T13:32:48.521665+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T13:32:48.844186+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T13:32:49.150694+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T13:32:49.459882+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T13:32:49.776075+03:00] doctrine.DEBUG: Beginning transaction [] []
[2022-05-17T13:32:50.091805+03:00] doctrine.DEBUG: Executing query: ALTER TABLE article ADD author_name VARCHAR(255) NOT NULL {"sql":"ALTER TABLE article ADD author_name VARCHAR(255) NOT NULL"} []
[2022-05-17T13:32:50.417987+03:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20220517103150","2":"2022-05-17 13:32:49","3":345}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20220517103150","2":"2022-05-17 13:32:49","3":345},"types":{"1":2,"2":2,"3":1}} []
[2022-05-17T13:32:50.731221+03:00] doctrine.DEBUG: Committing transaction [] []
[2022-05-17T13:32:51.035074+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T13:34:45.645469+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T13:34:47.751320+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:34:50.230182+03:00] doctrine.DEBUG: Beginning transaction [] []
[2022-05-17T13:34:50.536011+03:00] doctrine.DEBUG: Executing statement: DELETE FROM "user" {"sql":"DELETE FROM \"user\""} []
[2022-05-17T13:34:50.839736+03:00] doctrine.DEBUG: Executing statement: DELETE FROM article {"sql":"DELETE FROM article"} []
[2022-05-17T13:34:51.131798+03:00] doctrine.DEBUG: Executing statement: DELETE FROM category {"sql":"DELETE FROM category"} []
[2022-05-17T13:34:51.457834+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2022-05-17T13:34:51.762505+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('category_id_seq') {"sql":"SELECT NEXTVAL('category_id_seq')"} []
[2022-05-17T13:34:52.060845+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('category_id_seq') {"sql":"SELECT NEXTVAL('category_id_seq')"} []
[2022-05-17T13:34:52.363360+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('article_id_seq') {"sql":"SELECT NEXTVAL('article_id_seq')"} []
[2022-05-17T13:34:52.660173+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('article_id_seq') {"sql":"SELECT NEXTVAL('article_id_seq')"} []
[2022-05-17T13:34:52.961089+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('article_id_seq') {"sql":"SELECT NEXTVAL('article_id_seq')"} []
[2022-05-17T13:34:53.268096+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('article_id_seq') {"sql":"SELECT NEXTVAL('article_id_seq')"} []
[2022-05-17T13:34:53.570103+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('article_id_seq') {"sql":"SELECT NEXTVAL('article_id_seq')"} []
[2022-05-17T13:34:53.871282+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('article_id_seq') {"sql":"SELECT NEXTVAL('article_id_seq')"} []
[2022-05-17T13:34:54.171146+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('article_id_seq') {"sql":"SELECT NEXTVAL('article_id_seq')"} []
[2022-05-17T13:34:54.478086+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('article_id_seq') {"sql":"SELECT NEXTVAL('article_id_seq')"} []
[2022-05-17T13:34:54.779055+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('article_id_seq') {"sql":"SELECT NEXTVAL('article_id_seq')"} []
[2022-05-17T13:34:55.070072+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('article_id_seq') {"sql":"SELECT NEXTVAL('article_id_seq')"} []
[2022-05-17T13:34:55.378843+03:00] doctrine.DEBUG: Executing statement: INSERT INTO category (id, entitled) VALUES (?, ?) (parameters: array{"1":1,"2":"accident"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO category (id, entitled) VALUES (?, ?)","params":{"1":1,"2":"accident"},"types":{"1":1,"2":2}} []
[2022-05-17T13:34:55.688838+03:00] doctrine.DEBUG: Executing statement: INSERT INTO category (id, entitled) VALUES (?, ?) (parameters: array{"1":2,"2":"politique"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO category (id, entitled) VALUES (?, ?)","params":{"1":2,"2":"politique"},"types":{"1":1,"2":2}} []
[2022-05-17T13:34:55.982586+03:00] doctrine.DEBUG: Executing statement: INSERT INTO article (id, header, title, created_at, content, url_path, sum_up, author_name, category_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":1,"2":"De nombreux incendies en australie","3":"incendies-australie-accident-rechauffement-climatique-actu","4":"1993-04-18 13:18:58","5":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ».\n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps.\n\nEn 2017, j’avais eu l’occasion d’écrire dans les lignes de Contrepoints l’amalgame qui était fait entre les importants <strong>incendies</strong> dans le Sud-Est, et l’interprétation de leur origine… à savoir l’indéniable « réchauffement climatique anthropique ».\n\nDe la même façon, je vous propose une lecture objective de la problématique et très synthétique, car le sujet est vaste, des <strong>incendies australiens</strong>.\n\nDes <strong>incendies</strong> majeurs\nOn ne peut nier la catastrophe que vit l’<strong>Australie</strong> depuis deux ans, puisque ces <strong>incendies</strong> majeurs ont débuté en 2018. Ils ne sont pas tous situés dans l’Est australien, mais également dans le Nord-Est, le Nord, et le Sud-Ouest, les plus importants se trouvant néanmoins en janvier 2020 dans la partie est des Nouvelles-Galles du Sud.\n\nIl s’agit d’un phénomène naturel extrême, amplifié par les conditions météorologiques, ainsi que par d’autres causes que nous allons examiner.\n                ","6":"incendies-en-australie-accident-rechauffement-climatique","7":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ». \n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps ...","8":"Alfred-Denis Leroy","9":1}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":1}) {"sql":"INSERT INTO article (id, header, title, created_at, content, url_path, sum_up, author_name, category_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":1,"2":"De nombreux incendies en australie","3":"incendies-australie-accident-rechauffement-climatique-actu","4":"1993-04-18 13:18:58","5":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ».\n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps.\n\nEn 2017, j’avais eu l’occasion d’écrire dans les lignes de Contrepoints l’amalgame qui était fait entre les importants <strong>incendies</strong> dans le Sud-Est, et l’interprétation de leur origine… à savoir l’indéniable « réchauffement climatique anthropique ».\n\nDe la même façon, je vous propose une lecture objective de la problématique et très synthétique, car le sujet est vaste, des <strong>incendies australiens</strong>.\n\nDes <strong>incendies</strong> majeurs\nOn ne peut nier la catastrophe que vit l’<strong>Australie</strong> depuis deux ans, puisque ces <strong>incendies</strong> majeurs ont débuté en 2018. Ils ne sont pas tous situés dans l’Est australien, mais également dans le Nord-Est, le Nord, et le Sud-Ouest, les plus importants se trouvant néanmoins en janvier 2020 dans la partie est des Nouvelles-Galles du Sud.\n\nIl s’agit d’un phénomène naturel extrême, amplifié par les conditions météorologiques, ainsi que par d’autres causes que nous allons examiner.\n                ","6":"incendies-en-australie-accident-rechauffement-climatique","7":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ». \n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps ...","8":"Alfred-Denis Leroy","9":1},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":1}} []
[2022-05-17T13:34:56.273255+03:00] doctrine.DEBUG: Rolling back transaction [] []
[2022-05-17T13:34:56.571266+03:00] console.CRITICAL: Error thrown while running command "doctrine:fixtures:load". Message: "An exception occurred while executing a query: SQLSTATE[22001]: String data, right truncated: 7 ERROR:  value too long for type character varying(255)" {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 7): An exception occurred while executing a query: SQLSTATE[22001]: String data, right truncated: 7 ERROR:  value too long for type character varying(255) at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/API/PostgreSQL/ExceptionConverter.php:91)\n[previous exception] [object] (Doctrine\\DBAL\\Driver\\PDO\\Exception(code: 7): SQLSTATE[22001]: String data, right truncated: 7 ERROR:  value too long for type character varying(255) at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Exception.php:30)\n[previous exception] [object] (PDOException(code: 22001): SQLSTATE[22001]: String data, right truncated: 7 ERROR:  value too long for type character varying(255) at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/dbal/src/Driver/PDO/Statement.php:101)","command":"doctrine:fixtures:load","message":"An exception occurred while executing a query: SQLSTATE[22001]: String data, right truncated: 7 ERROR:  value too long for type character varying(255)"} []
[2022-05-17T13:34:56.571747+03:00] console.DEBUG: Command "doctrine:fixtures:load" exited with code "7" {"command":"doctrine:fixtures:load","code":7} []
[2022-05-17T13:34:56.580006+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T13:35:35.221971+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T13:35:37.421187+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T13:35:37.732555+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T13:35:38.050018+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T13:35:38.351980+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T13:35:38.668127+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:35:38.970174+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T13:35:39.295301+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:35:39.604106+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T13:35:39.912059+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:35:40.222046+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T13:35:40.533022+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T13:35:40.841169+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T13:35:41.153115+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T13:35:41.479626+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T13:35:41.791028+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T13:35:42.103238+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:35:42.410923+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T13:35:42.727100+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:35:43.038105+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T13:35:43.350025+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:35:43.651180+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T13:35:43.967998+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T13:35:44.281180+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T13:35:44.592033+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T13:35:44.901916+03:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2022-05-17T13:35:45.213112+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:35:45.520193+03:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                         increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'd2hs8u73qk6i55'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value, \n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'd2hs8u73qk6i55'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2022-05-17T13:35:45.832621+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T13:35:46.142097+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T13:35:46.459087+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T13:35:46.768155+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:35:47.088130+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T13:35:47.400144+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:37:15.324863+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T13:37:17.407660+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T13:37:17.712223+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T13:37:18.014775+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T13:37:18.309771+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T13:37:18.616272+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:37:18.910679+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T13:37:19.213696+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:37:19.512658+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T13:37:19.813622+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:37:20.117715+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T13:37:20.410754+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T13:37:20.710688+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T13:37:21.010657+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T13:37:21.320187+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T13:37:21.610769+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T13:37:21.914844+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:37:22.212585+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T13:37:22.510847+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:37:22.809984+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T13:37:23.101803+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:37:23.399773+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T13:37:23.722809+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T13:37:24.023750+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T13:37:24.319932+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T13:37:24.624320+03:00] doctrine.DEBUG: Executing query: SELECT schema_name AS nspname                 FROM   information_schema.schemata                 WHERE  schema_name NOT LIKE 'pg\_%'                 AND    schema_name != 'information_schema' {"sql":"SELECT schema_name AS nspname\n                FROM   information_schema.schemata\n                WHERE  schema_name NOT LIKE 'pg\\_%'\n                AND    schema_name != 'information_schema'"} []
[2022-05-17T13:37:24.921523+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:37:25.219681+03:00] doctrine.DEBUG: Executing query: SELECT sequence_name AS relname,                        sequence_schema AS schemaname,                        minimum_value AS min_value,                         increment AS increment_by                 FROM   information_schema.sequences                 WHERE  sequence_catalog = 'd2hs8u73qk6i55'                 AND    sequence_schema NOT LIKE 'pg\_%'                 AND    sequence_schema != 'information_schema' {"sql":"SELECT sequence_name AS relname,\n                       sequence_schema AS schemaname,\n                       minimum_value AS min_value, \n                       increment AS increment_by\n                FROM   information_schema.sequences\n                WHERE  sequence_catalog = 'd2hs8u73qk6i55'\n                AND    sequence_schema NOT LIKE 'pg\\_%'\n                AND    sequence_schema != 'information_schema'"} []
[2022-05-17T13:37:25.522329+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T13:37:25.822647+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T13:37:26.120538+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T13:37:26.420766+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:37:26.719696+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T13:37:27.023851+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:37:27.321695+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T13:37:27.619576+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:37:27.920626+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T13:37:28.211844+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T13:37:28.510840+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T13:37:28.808693+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:37:29.099690+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'article' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'article' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T13:37:29.404931+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:37:29.723760+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'article' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'article' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T13:37:30.024876+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:37:30.321712+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'article' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'article' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T13:37:30.623797+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742393 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742393 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T13:37:30.933566+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742393 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742393 AND attnum IN (2) ORDER BY attnum ASC"} []
[2022-05-17T13:37:31.240018+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('article'::regclass) AS table_comment; {"sql":"SELECT obj_description('article'::regclass) AS table_comment;"} []
[2022-05-17T13:37:31.530616+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:37:31.819880+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'user' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'user' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T13:37:32.122816+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:37:32.420804+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'user' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'user' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T13:37:32.711835+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:37:33.010615+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'user' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'user' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T13:37:33.300804+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742406 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742406 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T13:37:33.599763+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742406 AND attnum IN (2) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742406 AND attnum IN (2) ORDER BY attnum ASC"} []
[2022-05-17T13:37:33.897784+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('"user"'::regclass) AS table_comment; {"sql":"SELECT obj_description('\"user\"'::regclass) AS table_comment;"} []
[2022-05-17T13:37:34.191861+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:37:34.505853+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'messenger_messages' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'messenger_messages' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T13:37:34.801803+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:37:35.099745+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'messenger_messages' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'messenger_messages' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T13:37:35.391739+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:37:35.697786+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'messenger_messages' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'messenger_messages' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T13:37:35.990861+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742415 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742415 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T13:37:36.290795+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742415 AND attnum IN (4) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742415 AND attnum IN (4) ORDER BY attnum ASC"} []
[2022-05-17T13:37:36.590812+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742415 AND attnum IN (6) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742415 AND attnum IN (6) ORDER BY attnum ASC"} []
[2022-05-17T13:37:36.890716+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742415 AND attnum IN (7) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742415 AND attnum IN (7) ORDER BY attnum ASC"} []
[2022-05-17T13:37:37.179906+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('messenger_messages'::regclass) AS table_comment; {"sql":"SELECT obj_description('messenger_messages'::regclass) AS table_comment;"} []
[2022-05-17T13:37:37.487868+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:37:37.779775+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'category' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'category' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T13:37:38.082582+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:37:38.380722+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'category' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'category' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T13:37:38.673031+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:37:38.970751+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'category' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'category' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T13:37:39.261846+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742401 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742401 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T13:37:39.567875+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('category'::regclass) AS table_comment; {"sql":"SELECT obj_description('category'::regclass) AS table_comment;"} []
[2022-05-17T13:37:39.869320+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T13:37:40.161595+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T13:37:40.471122+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T13:38:01.007496+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T13:38:03.194317+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:38:20.665181+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T13:38:20.986930+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T13:38:21.292704+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T13:38:21.592439+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:38:21.889939+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T13:38:22.196917+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:38:22.507975+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T13:38:22.819931+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:38:23.121055+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T13:38:23.422004+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T13:38:23.732084+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T13:38:24.048085+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T13:38:24.359849+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T13:38:24.663151+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T13:38:24.975634+03:00] doctrine.DEBUG: Beginning transaction [] []
[2022-05-17T13:38:25.295802+03:00] doctrine.DEBUG: Executing query: ALTER TABLE article ALTER sum_up TYPE TEXT {"sql":"ALTER TABLE article ALTER sum_up TYPE TEXT"} []
[2022-05-17T13:38:25.602933+03:00] doctrine.DEBUG: Executing query: ALTER TABLE article ALTER sum_up DROP DEFAULT {"sql":"ALTER TABLE article ALTER sum_up DROP DEFAULT"} []
[2022-05-17T13:38:25.915591+03:00] doctrine.DEBUG: Executing statement: INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?) (parameters: array{"1":"DoctrineMigrations\\Version20220517103724","2":"2022-05-17 13:38:24","3":640}, types: array{"1":2,"2":2,"3":1}) {"sql":"INSERT INTO doctrine_migration_versions (version, executed_at, execution_time) VALUES (?, ?, ?)","params":{"1":"DoctrineMigrations\\Version20220517103724","2":"2022-05-17 13:38:24","3":640},"types":{"1":2,"2":2,"3":1}} []
[2022-05-17T13:38:26.221377+03:00] doctrine.DEBUG: Committing transaction [] []
[2022-05-17T13:38:26.524510+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T13:38:46.798654+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T13:38:48.982809+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:38:51.486767+03:00] doctrine.DEBUG: Beginning transaction [] []
[2022-05-17T13:38:51.801691+03:00] doctrine.DEBUG: Executing statement: DELETE FROM "user" {"sql":"DELETE FROM \"user\""} []
[2022-05-17T13:38:52.109296+03:00] doctrine.DEBUG: Executing statement: DELETE FROM article {"sql":"DELETE FROM article"} []
[2022-05-17T13:38:52.409141+03:00] doctrine.DEBUG: Executing statement: DELETE FROM category {"sql":"DELETE FROM category"} []
[2022-05-17T13:38:52.728566+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('"user_id_seq"') {"sql":"SELECT NEXTVAL('\"user_id_seq\"')"} []
[2022-05-17T13:38:53.031799+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('category_id_seq') {"sql":"SELECT NEXTVAL('category_id_seq')"} []
[2022-05-17T13:38:53.337290+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('category_id_seq') {"sql":"SELECT NEXTVAL('category_id_seq')"} []
[2022-05-17T13:38:53.650671+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('article_id_seq') {"sql":"SELECT NEXTVAL('article_id_seq')"} []
[2022-05-17T13:38:53.949555+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('article_id_seq') {"sql":"SELECT NEXTVAL('article_id_seq')"} []
[2022-05-17T13:38:54.259490+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('article_id_seq') {"sql":"SELECT NEXTVAL('article_id_seq')"} []
[2022-05-17T13:38:54.559633+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('article_id_seq') {"sql":"SELECT NEXTVAL('article_id_seq')"} []
[2022-05-17T13:38:54.870458+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('article_id_seq') {"sql":"SELECT NEXTVAL('article_id_seq')"} []
[2022-05-17T13:38:55.177345+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('article_id_seq') {"sql":"SELECT NEXTVAL('article_id_seq')"} []
[2022-05-17T13:38:55.496396+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('article_id_seq') {"sql":"SELECT NEXTVAL('article_id_seq')"} []
[2022-05-17T13:38:55.801461+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('article_id_seq') {"sql":"SELECT NEXTVAL('article_id_seq')"} []
[2022-05-17T13:38:56.115497+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('article_id_seq') {"sql":"SELECT NEXTVAL('article_id_seq')"} []
[2022-05-17T13:38:56.419576+03:00] doctrine.DEBUG: Executing query: SELECT NEXTVAL('article_id_seq') {"sql":"SELECT NEXTVAL('article_id_seq')"} []
[2022-05-17T13:38:56.743660+03:00] doctrine.DEBUG: Executing statement: INSERT INTO category (id, entitled) VALUES (?, ?) (parameters: array{"1":3,"2":"accident"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO category (id, entitled) VALUES (?, ?)","params":{"1":3,"2":"accident"},"types":{"1":1,"2":2}} []
[2022-05-17T13:38:57.039185+03:00] doctrine.DEBUG: Executing statement: INSERT INTO category (id, entitled) VALUES (?, ?) (parameters: array{"1":4,"2":"politique"}, types: array{"1":1,"2":2}) {"sql":"INSERT INTO category (id, entitled) VALUES (?, ?)","params":{"1":4,"2":"politique"},"types":{"1":1,"2":2}} []
[2022-05-17T13:38:57.348192+03:00] doctrine.DEBUG: Executing statement: INSERT INTO article (id, header, title, created_at, content, url_path, sum_up, author_name, category_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":11,"2":"De nombreux incendies en australie","3":"incendies-australie-accident-rechauffement-climatique-actu","4":"2009-04-15 22:09:02","5":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ».\n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps.\n\nEn 2017, j’avais eu l’occasion d’écrire dans les lignes de Contrepoints l’amalgame qui était fait entre les importants <strong>incendies</strong> dans le Sud-Est, et l’interprétation de leur origine… à savoir l’indéniable « réchauffement climatique anthropique ».\n\nDe la même façon, je vous propose une lecture objective de la problématique et très synthétique, car le sujet est vaste, des <strong>incendies australiens</strong>.\n\nDes <strong>incendies</strong> majeurs\nOn ne peut nier la catastrophe que vit l’<strong>Australie</strong> depuis deux ans, puisque ces <strong>incendies</strong> majeurs ont débuté en 2018. Ils ne sont pas tous situés dans l’Est australien, mais également dans le Nord-Est, le Nord, et le Sud-Ouest, les plus importants se trouvant néanmoins en janvier 2020 dans la partie est des Nouvelles-Galles du Sud.\n\nIl s’agit d’un phénomène naturel extrême, amplifié par les conditions météorologiques, ainsi que par d’autres causes que nous allons examiner.\n                ","6":"incendies-en-australie-accident-rechauffement-climatique","7":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ». \n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps ...","8":"Alfred Baudry","9":3}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":1}) {"sql":"INSERT INTO article (id, header, title, created_at, content, url_path, sum_up, author_name, category_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":11,"2":"De nombreux incendies en australie","3":"incendies-australie-accident-rechauffement-climatique-actu","4":"2009-04-15 22:09:02","5":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ».\n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps.\n\nEn 2017, j’avais eu l’occasion d’écrire dans les lignes de Contrepoints l’amalgame qui était fait entre les importants <strong>incendies</strong> dans le Sud-Est, et l’interprétation de leur origine… à savoir l’indéniable « réchauffement climatique anthropique ».\n\nDe la même façon, je vous propose une lecture objective de la problématique et très synthétique, car le sujet est vaste, des <strong>incendies australiens</strong>.\n\nDes <strong>incendies</strong> majeurs\nOn ne peut nier la catastrophe que vit l’<strong>Australie</strong> depuis deux ans, puisque ces <strong>incendies</strong> majeurs ont débuté en 2018. Ils ne sont pas tous situés dans l’Est australien, mais également dans le Nord-Est, le Nord, et le Sud-Ouest, les plus importants se trouvant néanmoins en janvier 2020 dans la partie est des Nouvelles-Galles du Sud.\n\nIl s’agit d’un phénomène naturel extrême, amplifié par les conditions météorologiques, ainsi que par d’autres causes que nous allons examiner.\n                ","6":"incendies-en-australie-accident-rechauffement-climatique","7":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ». \n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps ...","8":"Alfred Baudry","9":3},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":1}} []
[2022-05-17T13:38:57.678148+03:00] doctrine.DEBUG: Executing statement: INSERT INTO article (id, header, title, created_at, content, url_path, sum_up, author_name, category_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":12,"2":"De nombreux incendies en australie","3":"incendies-australie-accident-rechauffement-climatique-actu","4":"1993-01-13 16:33:31","5":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ».\n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps.\n\nEn 2017, j’avais eu l’occasion d’écrire dans les lignes de Contrepoints l’amalgame qui était fait entre les importants <strong>incendies</strong> dans le Sud-Est, et l’interprétation de leur origine… à savoir l’indéniable « réchauffement climatique anthropique ».\n\nDe la même façon, je vous propose une lecture objective de la problématique et très synthétique, car le sujet est vaste, des <strong>incendies australiens</strong>.\n\nDes <strong>incendies</strong> majeurs\nOn ne peut nier la catastrophe que vit l’<strong>Australie</strong> depuis deux ans, puisque ces <strong>incendies</strong> majeurs ont débuté en 2018. Ils ne sont pas tous situés dans l’Est australien, mais également dans le Nord-Est, le Nord, et le Sud-Ouest, les plus importants se trouvant néanmoins en janvier 2020 dans la partie est des Nouvelles-Galles du Sud.\n\nIl s’agit d’un phénomène naturel extrême, amplifié par les conditions météorologiques, ainsi que par d’autres causes que nous allons examiner.\n                ","6":"incendies-en-australie-accident-rechauffement-climatique","7":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ». \n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps ...","8":"Marie Auger-Michel","9":3}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":1}) {"sql":"INSERT INTO article (id, header, title, created_at, content, url_path, sum_up, author_name, category_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":12,"2":"De nombreux incendies en australie","3":"incendies-australie-accident-rechauffement-climatique-actu","4":"1993-01-13 16:33:31","5":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ».\n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps.\n\nEn 2017, j’avais eu l’occasion d’écrire dans les lignes de Contrepoints l’amalgame qui était fait entre les importants <strong>incendies</strong> dans le Sud-Est, et l’interprétation de leur origine… à savoir l’indéniable « réchauffement climatique anthropique ».\n\nDe la même façon, je vous propose une lecture objective de la problématique et très synthétique, car le sujet est vaste, des <strong>incendies australiens</strong>.\n\nDes <strong>incendies</strong> majeurs\nOn ne peut nier la catastrophe que vit l’<strong>Australie</strong> depuis deux ans, puisque ces <strong>incendies</strong> majeurs ont débuté en 2018. Ils ne sont pas tous situés dans l’Est australien, mais également dans le Nord-Est, le Nord, et le Sud-Ouest, les plus importants se trouvant néanmoins en janvier 2020 dans la partie est des Nouvelles-Galles du Sud.\n\nIl s’agit d’un phénomène naturel extrême, amplifié par les conditions météorologiques, ainsi que par d’autres causes que nous allons examiner.\n                ","6":"incendies-en-australie-accident-rechauffement-climatique","7":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ». \n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps ...","8":"Marie Auger-Michel","9":3},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":1}} []
[2022-05-17T13:38:57.988294+03:00] doctrine.DEBUG: Executing statement: INSERT INTO article (id, header, title, created_at, content, url_path, sum_up, author_name, category_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":13,"2":"De nombreux incendies en australie","3":"incendies-australie-accident-rechauffement-climatique-actu","4":"1993-02-28 04:18:36","5":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ».\n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps.\n\nEn 2017, j’avais eu l’occasion d’écrire dans les lignes de Contrepoints l’amalgame qui était fait entre les importants <strong>incendies</strong> dans le Sud-Est, et l’interprétation de leur origine… à savoir l’indéniable « réchauffement climatique anthropique ».\n\nDe la même façon, je vous propose une lecture objective de la problématique et très synthétique, car le sujet est vaste, des <strong>incendies australiens</strong>.\n\nDes <strong>incendies</strong> majeurs\nOn ne peut nier la catastrophe que vit l’<strong>Australie</strong> depuis deux ans, puisque ces <strong>incendies</strong> majeurs ont débuté en 2018. Ils ne sont pas tous situés dans l’Est australien, mais également dans le Nord-Est, le Nord, et le Sud-Ouest, les plus importants se trouvant néanmoins en janvier 2020 dans la partie est des Nouvelles-Galles du Sud.\n\nIl s’agit d’un phénomène naturel extrême, amplifié par les conditions météorologiques, ainsi que par d’autres causes que nous allons examiner.\n                ","6":"incendies-en-australie-accident-rechauffement-climatique","7":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ». \n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps ...","8":"Franck Leduc","9":3}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":1}) {"sql":"INSERT INTO article (id, header, title, created_at, content, url_path, sum_up, author_name, category_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":13,"2":"De nombreux incendies en australie","3":"incendies-australie-accident-rechauffement-climatique-actu","4":"1993-02-28 04:18:36","5":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ».\n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps.\n\nEn 2017, j’avais eu l’occasion d’écrire dans les lignes de Contrepoints l’amalgame qui était fait entre les importants <strong>incendies</strong> dans le Sud-Est, et l’interprétation de leur origine… à savoir l’indéniable « réchauffement climatique anthropique ».\n\nDe la même façon, je vous propose une lecture objective de la problématique et très synthétique, car le sujet est vaste, des <strong>incendies australiens</strong>.\n\nDes <strong>incendies</strong> majeurs\nOn ne peut nier la catastrophe que vit l’<strong>Australie</strong> depuis deux ans, puisque ces <strong>incendies</strong> majeurs ont débuté en 2018. Ils ne sont pas tous situés dans l’Est australien, mais également dans le Nord-Est, le Nord, et le Sud-Ouest, les plus importants se trouvant néanmoins en janvier 2020 dans la partie est des Nouvelles-Galles du Sud.\n\nIl s’agit d’un phénomène naturel extrême, amplifié par les conditions météorologiques, ainsi que par d’autres causes que nous allons examiner.\n                ","6":"incendies-en-australie-accident-rechauffement-climatique","7":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ». \n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps ...","8":"Franck Leduc","9":3},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":1}} []
[2022-05-17T13:38:58.321385+03:00] doctrine.DEBUG: Executing statement: INSERT INTO article (id, header, title, created_at, content, url_path, sum_up, author_name, category_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":14,"2":"De nombreux incendies en australie","3":"incendies-australie-accident-rechauffement-climatique-actu","4":"2009-10-29 23:28:22","5":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ».\n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps.\n\nEn 2017, j’avais eu l’occasion d’écrire dans les lignes de Contrepoints l’amalgame qui était fait entre les importants <strong>incendies</strong> dans le Sud-Est, et l’interprétation de leur origine… à savoir l’indéniable « réchauffement climatique anthropique ».\n\nDe la même façon, je vous propose une lecture objective de la problématique et très synthétique, car le sujet est vaste, des <strong>incendies australiens</strong>.\n\nDes <strong>incendies</strong> majeurs\nOn ne peut nier la catastrophe que vit l’<strong>Australie</strong> depuis deux ans, puisque ces <strong>incendies</strong> majeurs ont débuté en 2018. Ils ne sont pas tous situés dans l’Est australien, mais également dans le Nord-Est, le Nord, et le Sud-Ouest, les plus importants se trouvant néanmoins en janvier 2020 dans la partie est des Nouvelles-Galles du Sud.\n\nIl s’agit d’un phénomène naturel extrême, amplifié par les conditions météorologiques, ainsi que par d’autres causes que nous allons examiner.\n                ","6":"incendies-en-australie-accident-rechauffement-climatique","7":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ». \n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps ...","8":"Alexandria Martinez","9":3}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":1}) {"sql":"INSERT INTO article (id, header, title, created_at, content, url_path, sum_up, author_name, category_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":14,"2":"De nombreux incendies en australie","3":"incendies-australie-accident-rechauffement-climatique-actu","4":"2009-10-29 23:28:22","5":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ».\n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps.\n\nEn 2017, j’avais eu l’occasion d’écrire dans les lignes de Contrepoints l’amalgame qui était fait entre les importants <strong>incendies</strong> dans le Sud-Est, et l’interprétation de leur origine… à savoir l’indéniable « réchauffement climatique anthropique ».\n\nDe la même façon, je vous propose une lecture objective de la problématique et très synthétique, car le sujet est vaste, des <strong>incendies australiens</strong>.\n\nDes <strong>incendies</strong> majeurs\nOn ne peut nier la catastrophe que vit l’<strong>Australie</strong> depuis deux ans, puisque ces <strong>incendies</strong> majeurs ont débuté en 2018. Ils ne sont pas tous situés dans l’Est australien, mais également dans le Nord-Est, le Nord, et le Sud-Ouest, les plus importants se trouvant néanmoins en janvier 2020 dans la partie est des Nouvelles-Galles du Sud.\n\nIl s’agit d’un phénomène naturel extrême, amplifié par les conditions météorologiques, ainsi que par d’autres causes que nous allons examiner.\n                ","6":"incendies-en-australie-accident-rechauffement-climatique","7":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ». \n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps ...","8":"Alexandria Martinez","9":3},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":1}} []
[2022-05-17T13:38:58.630294+03:00] doctrine.DEBUG: Executing statement: INSERT INTO article (id, header, title, created_at, content, url_path, sum_up, author_name, category_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":15,"2":"De nombreux incendies en australie","3":"incendies-australie-accident-rechauffement-climatique-actu","4":"1997-09-28 20:16:25","5":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ».\n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps.\n\nEn 2017, j’avais eu l’occasion d’écrire dans les lignes de Contrepoints l’amalgame qui était fait entre les importants <strong>incendies</strong> dans le Sud-Est, et l’interprétation de leur origine… à savoir l’indéniable « réchauffement climatique anthropique ».\n\nDe la même façon, je vous propose une lecture objective de la problématique et très synthétique, car le sujet est vaste, des <strong>incendies australiens</strong>.\n\nDes <strong>incendies</strong> majeurs\nOn ne peut nier la catastrophe que vit l’<strong>Australie</strong> depuis deux ans, puisque ces <strong>incendies</strong> majeurs ont débuté en 2018. Ils ne sont pas tous situés dans l’Est australien, mais également dans le Nord-Est, le Nord, et le Sud-Ouest, les plus importants se trouvant néanmoins en janvier 2020 dans la partie est des Nouvelles-Galles du Sud.\n\nIl s’agit d’un phénomène naturel extrême, amplifié par les conditions météorologiques, ainsi que par d’autres causes que nous allons examiner.\n                ","6":"incendies-en-australie-accident-rechauffement-climatique","7":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ». \n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps ...","8":"Anastasie de la Gimenez","9":3}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":1}) {"sql":"INSERT INTO article (id, header, title, created_at, content, url_path, sum_up, author_name, category_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":15,"2":"De nombreux incendies en australie","3":"incendies-australie-accident-rechauffement-climatique-actu","4":"1997-09-28 20:16:25","5":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ».\n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps.\n\nEn 2017, j’avais eu l’occasion d’écrire dans les lignes de Contrepoints l’amalgame qui était fait entre les importants <strong>incendies</strong> dans le Sud-Est, et l’interprétation de leur origine… à savoir l’indéniable « réchauffement climatique anthropique ».\n\nDe la même façon, je vous propose une lecture objective de la problématique et très synthétique, car le sujet est vaste, des <strong>incendies australiens</strong>.\n\nDes <strong>incendies</strong> majeurs\nOn ne peut nier la catastrophe que vit l’<strong>Australie</strong> depuis deux ans, puisque ces <strong>incendies</strong> majeurs ont débuté en 2018. Ils ne sont pas tous situés dans l’Est australien, mais également dans le Nord-Est, le Nord, et le Sud-Ouest, les plus importants se trouvant néanmoins en janvier 2020 dans la partie est des Nouvelles-Galles du Sud.\n\nIl s’agit d’un phénomène naturel extrême, amplifié par les conditions météorologiques, ainsi que par d’autres causes que nous allons examiner.\n                ","6":"incendies-en-australie-accident-rechauffement-climatique","7":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ». \n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps ...","8":"Anastasie de la Gimenez","9":3},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":1}} []
[2022-05-17T13:38:58.940254+03:00] doctrine.DEBUG: Executing statement: INSERT INTO article (id, header, title, created_at, content, url_path, sum_up, author_name, category_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":16,"2":"De nombreux incendies en australie","3":"incendies-australie-accident-rechauffement-climatique-actu","4":"2001-11-16 09:44:28","5":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ».\n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps.\n\nEn 2017, j’avais eu l’occasion d’écrire dans les lignes de Contrepoints l’amalgame qui était fait entre les importants <strong>incendies</strong> dans le Sud-Est, et l’interprétation de leur origine… à savoir l’indéniable « réchauffement climatique anthropique ».\n\nDe la même façon, je vous propose une lecture objective de la problématique et très synthétique, car le sujet est vaste, des <strong>incendies australiens</strong>.\n\nDes <strong>incendies</strong> majeurs\nOn ne peut nier la catastrophe que vit l’<strong>Australie</strong> depuis deux ans, puisque ces <strong>incendies</strong> majeurs ont débuté en 2018. Ils ne sont pas tous situés dans l’Est australien, mais également dans le Nord-Est, le Nord, et le Sud-Ouest, les plus importants se trouvant néanmoins en janvier 2020 dans la partie est des Nouvelles-Galles du Sud.\n\nIl s’agit d’un phénomène naturel extrême, amplifié par les conditions météorologiques, ainsi que par d’autres causes que nous allons examiner.\n                ","6":"incendies-en-australie-accident-rechauffement-climatique","7":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ». \n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps ...","8":"Noël Fabre","9":3}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":1}) {"sql":"INSERT INTO article (id, header, title, created_at, content, url_path, sum_up, author_name, category_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":16,"2":"De nombreux incendies en australie","3":"incendies-australie-accident-rechauffement-climatique-actu","4":"2001-11-16 09:44:28","5":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ».\n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps.\n\nEn 2017, j’avais eu l’occasion d’écrire dans les lignes de Contrepoints l’amalgame qui était fait entre les importants <strong>incendies</strong> dans le Sud-Est, et l’interprétation de leur origine… à savoir l’indéniable « réchauffement climatique anthropique ».\n\nDe la même façon, je vous propose une lecture objective de la problématique et très synthétique, car le sujet est vaste, des <strong>incendies australiens</strong>.\n\nDes <strong>incendies</strong> majeurs\nOn ne peut nier la catastrophe que vit l’<strong>Australie</strong> depuis deux ans, puisque ces <strong>incendies</strong> majeurs ont débuté en 2018. Ils ne sont pas tous situés dans l’Est australien, mais également dans le Nord-Est, le Nord, et le Sud-Ouest, les plus importants se trouvant néanmoins en janvier 2020 dans la partie est des Nouvelles-Galles du Sud.\n\nIl s’agit d’un phénomène naturel extrême, amplifié par les conditions météorologiques, ainsi que par d’autres causes que nous allons examiner.\n                ","6":"incendies-en-australie-accident-rechauffement-climatique","7":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ». \n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps ...","8":"Noël Fabre","9":3},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":1}} []
[2022-05-17T13:38:59.241336+03:00] doctrine.DEBUG: Executing statement: INSERT INTO article (id, header, title, created_at, content, url_path, sum_up, author_name, category_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":17,"2":"De nombreux incendies en australie","3":"incendies-australie-accident-rechauffement-climatique-actu","4":"2015-06-06 02:51:44","5":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ».\n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps.\n\nEn 2017, j’avais eu l’occasion d’écrire dans les lignes de Contrepoints l’amalgame qui était fait entre les importants <strong>incendies</strong> dans le Sud-Est, et l’interprétation de leur origine… à savoir l’indéniable « réchauffement climatique anthropique ».\n\nDe la même façon, je vous propose une lecture objective de la problématique et très synthétique, car le sujet est vaste, des <strong>incendies australiens</strong>.\n\nDes <strong>incendies</strong> majeurs\nOn ne peut nier la catastrophe que vit l’<strong>Australie</strong> depuis deux ans, puisque ces <strong>incendies</strong> majeurs ont débuté en 2018. Ils ne sont pas tous situés dans l’Est australien, mais également dans le Nord-Est, le Nord, et le Sud-Ouest, les plus importants se trouvant néanmoins en janvier 2020 dans la partie est des Nouvelles-Galles du Sud.\n\nIl s’agit d’un phénomène naturel extrême, amplifié par les conditions météorologiques, ainsi que par d’autres causes que nous allons examiner.\n                ","6":"incendies-en-australie-accident-rechauffement-climatique","7":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ». \n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps ...","8":"Margaret Maurice","9":3}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":1}) {"sql":"INSERT INTO article (id, header, title, created_at, content, url_path, sum_up, author_name, category_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":17,"2":"De nombreux incendies en australie","3":"incendies-australie-accident-rechauffement-climatique-actu","4":"2015-06-06 02:51:44","5":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ».\n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps.\n\nEn 2017, j’avais eu l’occasion d’écrire dans les lignes de Contrepoints l’amalgame qui était fait entre les importants <strong>incendies</strong> dans le Sud-Est, et l’interprétation de leur origine… à savoir l’indéniable « réchauffement climatique anthropique ».\n\nDe la même façon, je vous propose une lecture objective de la problématique et très synthétique, car le sujet est vaste, des <strong>incendies australiens</strong>.\n\nDes <strong>incendies</strong> majeurs\nOn ne peut nier la catastrophe que vit l’<strong>Australie</strong> depuis deux ans, puisque ces <strong>incendies</strong> majeurs ont débuté en 2018. Ils ne sont pas tous situés dans l’Est australien, mais également dans le Nord-Est, le Nord, et le Sud-Ouest, les plus importants se trouvant néanmoins en janvier 2020 dans la partie est des Nouvelles-Galles du Sud.\n\nIl s’agit d’un phénomène naturel extrême, amplifié par les conditions météorologiques, ainsi que par d’autres causes que nous allons examiner.\n                ","6":"incendies-en-australie-accident-rechauffement-climatique","7":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ». \n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps ...","8":"Margaret Maurice","9":3},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":1}} []
[2022-05-17T13:38:59.565324+03:00] doctrine.DEBUG: Executing statement: INSERT INTO article (id, header, title, created_at, content, url_path, sum_up, author_name, category_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":18,"2":"De nombreux incendies en australie","3":"incendies-australie-accident-rechauffement-climatique-actu","4":"2021-07-25 09:47:16","5":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ».\n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps.\n\nEn 2017, j’avais eu l’occasion d’écrire dans les lignes de Contrepoints l’amalgame qui était fait entre les importants <strong>incendies</strong> dans le Sud-Est, et l’interprétation de leur origine… à savoir l’indéniable « réchauffement climatique anthropique ».\n\nDe la même façon, je vous propose une lecture objective de la problématique et très synthétique, car le sujet est vaste, des <strong>incendies australiens</strong>.\n\nDes <strong>incendies</strong> majeurs\nOn ne peut nier la catastrophe que vit l’<strong>Australie</strong> depuis deux ans, puisque ces <strong>incendies</strong> majeurs ont débuté en 2018. Ils ne sont pas tous situés dans l’Est australien, mais également dans le Nord-Est, le Nord, et le Sud-Ouest, les plus importants se trouvant néanmoins en janvier 2020 dans la partie est des Nouvelles-Galles du Sud.\n\nIl s’agit d’un phénomène naturel extrême, amplifié par les conditions météorologiques, ainsi que par d’autres causes que nous allons examiner.\n                ","6":"incendies-en-australie-accident-rechauffement-climatique","7":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ». \n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps ...","8":"Capucine Louis","9":3}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":1}) {"sql":"INSERT INTO article (id, header, title, created_at, content, url_path, sum_up, author_name, category_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":18,"2":"De nombreux incendies en australie","3":"incendies-australie-accident-rechauffement-climatique-actu","4":"2021-07-25 09:47:16","5":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ».\n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps.\n\nEn 2017, j’avais eu l’occasion d’écrire dans les lignes de Contrepoints l’amalgame qui était fait entre les importants <strong>incendies</strong> dans le Sud-Est, et l’interprétation de leur origine… à savoir l’indéniable « réchauffement climatique anthropique ».\n\nDe la même façon, je vous propose une lecture objective de la problématique et très synthétique, car le sujet est vaste, des <strong>incendies australiens</strong>.\n\nDes <strong>incendies</strong> majeurs\nOn ne peut nier la catastrophe que vit l’<strong>Australie</strong> depuis deux ans, puisque ces <strong>incendies</strong> majeurs ont débuté en 2018. Ils ne sont pas tous situés dans l’Est australien, mais également dans le Nord-Est, le Nord, et le Sud-Ouest, les plus importants se trouvant néanmoins en janvier 2020 dans la partie est des Nouvelles-Galles du Sud.\n\nIl s’agit d’un phénomène naturel extrême, amplifié par les conditions météorologiques, ainsi que par d’autres causes que nous allons examiner.\n                ","6":"incendies-en-australie-accident-rechauffement-climatique","7":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ». \n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps ...","8":"Capucine Louis","9":3},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":1}} []
[2022-05-17T13:38:59.878321+03:00] doctrine.DEBUG: Executing statement: INSERT INTO article (id, header, title, created_at, content, url_path, sum_up, author_name, category_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":19,"2":"De nombreux incendies en australie","3":"incendies-australie-accident-rechauffement-climatique-actu","4":"1992-06-22 14:54:55","5":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ».\n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps.\n\nEn 2017, j’avais eu l’occasion d’écrire dans les lignes de Contrepoints l’amalgame qui était fait entre les importants <strong>incendies</strong> dans le Sud-Est, et l’interprétation de leur origine… à savoir l’indéniable « réchauffement climatique anthropique ».\n\nDe la même façon, je vous propose une lecture objective de la problématique et très synthétique, car le sujet est vaste, des <strong>incendies australiens</strong>.\n\nDes <strong>incendies</strong> majeurs\nOn ne peut nier la catastrophe que vit l’<strong>Australie</strong> depuis deux ans, puisque ces <strong>incendies</strong> majeurs ont débuté en 2018. Ils ne sont pas tous situés dans l’Est australien, mais également dans le Nord-Est, le Nord, et le Sud-Ouest, les plus importants se trouvant néanmoins en janvier 2020 dans la partie est des Nouvelles-Galles du Sud.\n\nIl s’agit d’un phénomène naturel extrême, amplifié par les conditions météorologiques, ainsi que par d’autres causes que nous allons examiner.\n                ","6":"incendies-en-australie-accident-rechauffement-climatique","7":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ». \n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps ...","8":"Édith Costa","9":3}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":1}) {"sql":"INSERT INTO article (id, header, title, created_at, content, url_path, sum_up, author_name, category_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":19,"2":"De nombreux incendies en australie","3":"incendies-australie-accident-rechauffement-climatique-actu","4":"1992-06-22 14:54:55","5":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ».\n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps.\n\nEn 2017, j’avais eu l’occasion d’écrire dans les lignes de Contrepoints l’amalgame qui était fait entre les importants <strong>incendies</strong> dans le Sud-Est, et l’interprétation de leur origine… à savoir l’indéniable « réchauffement climatique anthropique ».\n\nDe la même façon, je vous propose une lecture objective de la problématique et très synthétique, car le sujet est vaste, des <strong>incendies australiens</strong>.\n\nDes <strong>incendies</strong> majeurs\nOn ne peut nier la catastrophe que vit l’<strong>Australie</strong> depuis deux ans, puisque ces <strong>incendies</strong> majeurs ont débuté en 2018. Ils ne sont pas tous situés dans l’Est australien, mais également dans le Nord-Est, le Nord, et le Sud-Ouest, les plus importants se trouvant néanmoins en janvier 2020 dans la partie est des Nouvelles-Galles du Sud.\n\nIl s’agit d’un phénomène naturel extrême, amplifié par les conditions météorologiques, ainsi que par d’autres causes que nous allons examiner.\n                ","6":"incendies-en-australie-accident-rechauffement-climatique","7":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ». \n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps ...","8":"Édith Costa","9":3},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":1}} []
[2022-05-17T13:39:00.198352+03:00] doctrine.DEBUG: Executing statement: INSERT INTO article (id, header, title, created_at, content, url_path, sum_up, author_name, category_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":20,"2":"De nombreux incendies en australie","3":"incendies-australie-accident-rechauffement-climatique-actu","4":"2014-11-16 22:26:56","5":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ».\n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps.\n\nEn 2017, j’avais eu l’occasion d’écrire dans les lignes de Contrepoints l’amalgame qui était fait entre les importants <strong>incendies</strong> dans le Sud-Est, et l’interprétation de leur origine… à savoir l’indéniable « réchauffement climatique anthropique ».\n\nDe la même façon, je vous propose une lecture objective de la problématique et très synthétique, car le sujet est vaste, des <strong>incendies australiens</strong>.\n\nDes <strong>incendies</strong> majeurs\nOn ne peut nier la catastrophe que vit l’<strong>Australie</strong> depuis deux ans, puisque ces <strong>incendies</strong> majeurs ont débuté en 2018. Ils ne sont pas tous situés dans l’Est australien, mais également dans le Nord-Est, le Nord, et le Sud-Ouest, les plus importants se trouvant néanmoins en janvier 2020 dans la partie est des Nouvelles-Galles du Sud.\n\nIl s’agit d’un phénomène naturel extrême, amplifié par les conditions météorologiques, ainsi que par d’autres causes que nous allons examiner.\n                ","6":"incendies-en-australie-accident-rechauffement-climatique","7":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ». \n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps ...","8":"Nicolas Cousin","9":3}, types: array{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":1}) {"sql":"INSERT INTO article (id, header, title, created_at, content, url_path, sum_up, author_name, category_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":20,"2":"De nombreux incendies en australie","3":"incendies-australie-accident-rechauffement-climatique-actu","4":"2014-11-16 22:26:56","5":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ».\n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps.\n\nEn 2017, j’avais eu l’occasion d’écrire dans les lignes de Contrepoints l’amalgame qui était fait entre les importants <strong>incendies</strong> dans le Sud-Est, et l’interprétation de leur origine… à savoir l’indéniable « réchauffement climatique anthropique ».\n\nDe la même façon, je vous propose une lecture objective de la problématique et très synthétique, car le sujet est vaste, des <strong>incendies australiens</strong>.\n\nDes <strong>incendies</strong> majeurs\nOn ne peut nier la catastrophe que vit l’<strong>Australie</strong> depuis deux ans, puisque ces <strong>incendies</strong> majeurs ont débuté en 2018. Ils ne sont pas tous situés dans l’Est australien, mais également dans le Nord-Est, le Nord, et le Sud-Ouest, les plus importants se trouvant néanmoins en janvier 2020 dans la partie est des Nouvelles-Galles du Sud.\n\nIl s’agit d’un phénomène naturel extrême, amplifié par les conditions météorologiques, ainsi que par d’autres causes que nous allons examiner.\n                ","6":"incendies-en-australie-accident-rechauffement-climatique","7":"\nLes <strong>incendies</strong> australiens, nommés bushfire ou feux de brousse, suscitent un battage médiatique permanent, fondé en grande partie sur une cause ostentatoire et considérée comme une évidence : le « réchauffement climatique ». \n\nAu-delà de ces annonces le plus souvent teintées d’idéologie, une lecture plus attentive et objective de la réalité révèle une multiplicité de causes que les médias s’abstiennent d’évoquer la plupart du temps ...","8":"Nicolas Cousin","9":3},"types":{"1":1,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":1}} []
[2022-05-17T13:39:00.627230+03:00] doctrine.DEBUG: Executing statement: INSERT INTO "user" (id, email, roles, password) VALUES (?, ?, ?, ?) (parameters: array{"1":2,"2":"admin@gmail.com","3":"[]","4":"mdp"}, types: array{"1":1,"2":2,"3":2,"4":2}) {"sql":"INSERT INTO \"user\" (id, email, roles, password) VALUES (?, ?, ?, ?)","params":{"1":2,"2":"admin@gmail.com","3":"[]","4":"mdp"},"types":{"1":1,"2":2,"3":2,"4":2}} []
[2022-05-17T13:39:00.937578+03:00] doctrine.DEBUG: Committing transaction [] []
[2022-05-17T13:39:01.234607+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T13:43:01.194826+03:00] console.DEBUG: Command "make:auth" exited with code "1" {"command":"make:auth","code":1} []
[2022-05-17T13:44:03.292497+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/de_/ContainerWYf5i8o/App_KernelDevDebugContainer.php","line":1069,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T13:44:30.704084+03:00] console.DEBUG: Command "make:auth" exited with code "1" {"command":"make:auth","code":1} []
[2022-05-17T13:58:11.429873+03:00] request.INFO: Matched route "liste_articles". {"route":"liste_articles","route_parameters":{"_route":"liste_articles","_controller":"App\\Controller\\SimpleUserController::liste_articles"},"request_uri":"https://localhost:8000/articles","method":"GET"} []
[2022-05-17T13:58:11.430445+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T13:58:11.437346+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T13:58:13.651974+03:00] request.CRITICAL: Uncaught PHP Exception BadMethodCallException: "Undefined method "findAllWithPagination". The method name must start with either findBy, findOneBy or countBy!" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/orm/lib/Doctrine/ORM/EntityRepository.php line 285 {"exception":"[object] (BadMethodCallException(code: 0): Undefined method \"findAllWithPagination\". The method name must start with either findBy, findOneBy or countBy! at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/orm/lib/Doctrine/ORM/EntityRepository.php:285)"} []
[2022-05-17T13:58:13.671436+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T13:58:13.983962+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T13:58:14.309988+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T13:58:14.620026+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T13:58:14.943306+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:58:15.242904+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T13:58:15.574967+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:58:15.881810+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T13:58:16.205834+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:58:16.518934+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T13:58:16.822838+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T13:58:17.146863+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T13:58:17.467111+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T13:58:17.781824+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T13:58:18.135907+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T13:58:18.237372+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"804dde"},"request_uri":"https://localhost:8000/_wdt/804dde","method":"GET"} []
[2022-05-17T14:01:56.933601+03:00] request.INFO: Matched route "liste_articles". {"route":"liste_articles","route_parameters":{"_route":"liste_articles","_controller":"App\\Controller\\SimpleUserController::liste_articles"},"request_uri":"https://localhost:8000/articles","method":"GET"} []
[2022-05-17T14:01:56.934228+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T14:01:56.940430+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T14:01:59.245774+03:00] doctrine.DEBUG: Executing query: SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table {"sql":"SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table"} []
[2022-05-17T14:01:59.593831+03:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\SyntaxError: "The "format_datetime" filter is part of the IntlExtension, which is not installed/enabled; try running "composer require twig/intl-extra" in "simple_user/articles.html.twig"." at /home/durandal/Documents/GitHub/web-design-2/vendor/twig/extra-bundle/MissingExtensionSuggestor.php line 21 {"exception":"[object] (Twig\\Error\\SyntaxError(code: 0): The \"format_datetime\" filter is part of the IntlExtension, which is not installed/enabled; try running \"composer require twig/intl-extra\" in \"simple_user/articles.html.twig\". at /home/durandal/Documents/GitHub/web-design-2/vendor/twig/extra-bundle/MissingExtensionSuggestor.php:21)"} []
[2022-05-17T14:01:59.630041+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T14:01:59.970113+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T14:02:00.302164+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T14:02:00.617151+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T14:02:00.948575+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T14:02:01.268208+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T14:02:01.593208+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T14:02:01.899058+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T14:02:02.228243+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T14:02:02.546160+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T14:02:02.860197+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T14:02:03.187126+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T14:02:03.511774+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T14:02:03.824562+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T14:02:04.152233+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T14:02:04.165473+03:00] request.INFO: Matched route "liste_articles". {"route":"liste_articles","route_parameters":{"_route":"liste_articles","_controller":"App\\Controller\\SimpleUserController::liste_articles"},"request_uri":"https://localhost:8000/articles","method":"GET"} []
[2022-05-17T14:02:04.166036+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T14:02:04.167708+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T14:02:06.370886+03:00] doctrine.DEBUG: Executing query: SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table {"sql":"SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table"} []
[2022-05-17T14:02:06.702968+03:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\SyntaxError: "The "format_datetime" filter is part of the IntlExtension, which is not installed/enabled; try running "composer require twig/intl-extra" in "simple_user/articles.html.twig"." at /home/durandal/Documents/GitHub/web-design-2/vendor/twig/extra-bundle/MissingExtensionSuggestor.php line 21 {"exception":"[object] (Twig\\Error\\SyntaxError(code: 0): The \"format_datetime\" filter is part of the IntlExtension, which is not installed/enabled; try running \"composer require twig/intl-extra\" in \"simple_user/articles.html.twig\". at /home/durandal/Documents/GitHub/web-design-2/vendor/twig/extra-bundle/MissingExtensionSuggestor.php:21)"} []
[2022-05-17T14:02:06.736136+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T14:02:07.076953+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T14:02:07.380159+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T14:02:07.704905+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T14:02:08.016233+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T14:02:08.337109+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T14:02:08.692422+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T14:02:09.016098+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T14:02:09.337082+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T14:02:09.657990+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T14:02:09.977036+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T14:02:10.296126+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T14:02:10.616262+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T14:02:10.938254+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T14:02:11.282369+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T14:02:11.394962+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"37eabd"},"request_uri":"https://localhost:8000/_wdt/37eabd","method":"GET"} []
[2022-05-17T14:02:49.712618+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerUoPfflm/App_KernelDevDebugContainer.php","line":1072,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T14:03:16.490758+03:00] request.INFO: Matched route "liste_articles". {"route":"liste_articles","route_parameters":{"_route":"liste_articles","_controller":"App\\Controller\\SimpleUserController::liste_articles"},"request_uri":"https://localhost:8000/articles","method":"GET"} []
[2022-05-17T14:03:16.494981+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T14:03:16.529192+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T14:03:18.854163+03:00] doctrine.DEBUG: Executing query: SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table {"sql":"SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table"} []
[2022-05-17T14:03:19.196245+03:00] doctrine.DEBUG: Executing query: SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5 {"sql":"SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5"} []
[2022-05-17T14:03:19.509753+03:00] doctrine.DEBUG: Executing statement: SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC (parameters: array{"1":11,"2":12,"3":13,"4":14,"5":15}, types: array{"1":1,"2":1,"3":1,"4":1,"5":1}) {"sql":"SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC","params":{"1":11,"2":12,"3":13,"4":14,"5":15},"types":{"1":1,"2":1,"3":1,"4":1,"5":1}} []
[2022-05-17T14:03:19.858273+03:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2022-05-17T14:03:20.218427+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T14:03:20.556185+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T14:03:20.860083+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T14:03:21.346283+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T14:03:21.678875+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T14:03:21.988282+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T14:03:22.312490+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T14:03:22.618223+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T14:03:22.940134+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T14:03:23.267189+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T14:03:23.603275+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T14:03:23.940174+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T14:03:24.263297+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T14:03:24.598291+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T14:03:24.917053+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T14:03:24.920476+03:00] request.INFO: Matched route "liste_articles". {"route":"liste_articles","route_parameters":{"_route":"liste_articles","_controller":"App\\Controller\\SimpleUserController::liste_articles"},"request_uri":"https://localhost:8000/articles","method":"GET"} []
[2022-05-17T14:03:24.920765+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T14:03:24.921589+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T14:03:27.194029+03:00] doctrine.DEBUG: Executing query: SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table {"sql":"SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table"} []
[2022-05-17T14:03:27.514366+03:00] doctrine.DEBUG: Executing query: SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5 {"sql":"SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5"} []
[2022-05-17T14:03:27.833541+03:00] doctrine.DEBUG: Executing statement: SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC (parameters: array{"1":11,"2":12,"3":13,"4":14,"5":15}, types: array{"1":1,"2":1,"3":1,"4":1,"5":1}) {"sql":"SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC","params":{"1":11,"2":12,"3":13,"4":14,"5":15},"types":{"1":1,"2":1,"3":1,"4":1,"5":1}} []
[2022-05-17T14:03:28.147740+03:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2022-05-17T14:03:28.467212+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T14:03:28.797204+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T14:03:29.107320+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T14:03:29.425171+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T14:03:29.745248+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T14:03:30.080145+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T14:03:30.406381+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T14:03:30.706155+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T14:03:31.024154+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T14:03:31.346201+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T14:03:31.677089+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T14:03:31.993050+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T14:03:32.304474+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T14:03:32.625217+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T14:03:32.967415+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T14:03:33.022851+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2dbe68"},"request_uri":"https://localhost:8000/_wdt/2dbe68","method":"GET"} []
[2022-05-17T14:27:44.549437+03:00] request.INFO: Matched route "app_base". {"route":"app_base","route_parameters":{"_route":"app_base","_controller":"App\\Controller\\FirstController::index"},"request_uri":"https://localhost:8000/","method":"GET"} []
[2022-05-17T14:27:44.555513+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T14:27:44.623166+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T14:27:48.235653+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T14:27:48.564320+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T14:27:48.872409+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T14:27:49.182344+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T14:27:49.506550+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T14:27:49.804466+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T14:27:50.127572+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T14:27:50.442447+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T14:27:50.751360+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T14:27:51.055304+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T14:27:51.359370+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T14:27:51.666628+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T14:27:51.969268+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T14:27:52.287739+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T14:27:52.617431+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T14:27:52.660449+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"015224"},"request_uri":"https://localhost:8000/_wdt/015224","method":"GET"} []
[2022-05-17T14:43:59.773475+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/de_/ContainerIEKs9VL/App_KernelDevDebugContainer.php","line":1072,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T15:04:08.200075+03:00] request.INFO: Matched route "liste_articles". {"route":"liste_articles","route_parameters":{"_route":"liste_articles","_controller":"App\\Controller\\SimpleUserController::liste_articles"},"request_uri":"https://localhost:8000/articles","method":"GET"} []
[2022-05-17T15:04:08.208319+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T15:04:08.256738+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T15:04:10.924072+03:00] doctrine.DEBUG: Executing query: SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table {"sql":"SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table"} []
[2022-05-17T15:04:11.273024+03:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Could not find the entrypoints file from Webpack: the file "/home/durandal/Documents/GitHub/web-design-2/public/build/entrypoints.json" does not exist.")." at /home/durandal/Documents/GitHub/web-design-2/templates/base.html.twig line 25 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Could not find the entrypoints file from Webpack: the file \"/home/durandal/Documents/GitHub/web-design-2/public/build/entrypoints.json\" does not exist.\"). at /home/durandal/Documents/GitHub/web-design-2/templates/base.html.twig:25)\n[previous exception] [object] (InvalidArgumentException(code: 0): Could not find the entrypoints file from Webpack: the file \"/home/durandal/Documents/GitHub/web-design-2/public/build/entrypoints.json\" does not exist. at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/webpack-encore-bundle/src/Asset/EntrypointLookup.php:124)"} []
[2022-05-17T15:04:11.355453+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T15:04:11.684478+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T15:04:12.003367+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T15:04:12.311487+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T15:04:12.634195+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:04:12.938293+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T15:04:13.280959+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:04:13.579518+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T15:04:13.885103+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:04:14.191355+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T15:04:14.505307+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T15:04:14.812340+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T15:04:15.133550+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T15:04:15.447373+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:04:15.804416+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T15:04:16.006662+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"019082"},"request_uri":"https://localhost:8000/_wdt/019082","method":"GET"} []
[2022-05-17T15:06:54.937687+03:00] request.INFO: Matched route "liste_articles". {"route":"liste_articles","route_parameters":{"_route":"liste_articles","_controller":"App\\Controller\\SimpleUserController::liste_articles"},"request_uri":"https://localhost:8000/articles","method":"GET"} []
[2022-05-17T15:06:54.944207+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T15:06:54.981303+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T15:06:57.424364+03:00] doctrine.DEBUG: Executing query: SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table {"sql":"SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table"} []
[2022-05-17T15:06:57.806177+03:00] doctrine.DEBUG: Executing query: SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5 {"sql":"SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5"} []
[2022-05-17T15:06:58.157320+03:00] doctrine.DEBUG: Executing statement: SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC (parameters: array{"1":11,"2":12,"3":13,"4":14,"5":15}, types: array{"1":1,"2":1,"3":1,"4":1,"5":1}) {"sql":"SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC","params":{"1":11,"2":12,"3":13,"4":14,"5":15},"types":{"1":1,"2":1,"3":1,"4":1,"5":1}} []
[2022-05-17T15:06:58.534125+03:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2022-05-17T15:06:58.900213+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T15:06:59.256927+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T15:06:59.590915+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T15:06:59.929041+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T15:07:00.295927+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:07:00.649038+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T15:07:01.002722+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:07:01.339999+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T15:07:01.695123+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:07:02.029169+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T15:07:02.366883+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T15:07:02.700858+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T15:07:03.046806+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T15:07:03.389448+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:07:03.746475+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T15:07:03.794473+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b9fd64"},"request_uri":"https://localhost:8000/_wdt/b9fd64","method":"GET"} []
[2022-05-17T15:17:53.801239+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerIEKs9VL/App_KernelDevDebugContainer.php","line":1072,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T15:38:45.401956+03:00] request.INFO: Matched route "liste_articles". {"route":"liste_articles","route_parameters":{"_route":"liste_articles","_controller":"App\\Controller\\SimpleUserController::liste_articles"},"request_uri":"https://localhost:8000/articles","method":"GET"} []
[2022-05-17T15:38:45.409011+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T15:38:45.457098+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T15:38:47.926081+03:00] doctrine.DEBUG: Executing query: SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table {"sql":"SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table"} []
[2022-05-17T15:38:48.278742+03:00] doctrine.DEBUG: Executing query: SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5 {"sql":"SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5"} []
[2022-05-17T15:38:48.632037+03:00] doctrine.DEBUG: Executing statement: SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC (parameters: array{"1":11,"2":12,"3":13,"4":14,"5":15}, types: array{"1":1,"2":1,"3":1,"4":1,"5":1}) {"sql":"SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC","params":{"1":11,"2":12,"3":13,"4":14,"5":15},"types":{"1":1,"2":1,"3":1,"4":1,"5":1}} []
[2022-05-17T15:38:49.003868+03:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2022-05-17T15:38:49.376548+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T15:38:49.728995+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T15:38:50.060883+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T15:38:50.389840+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T15:38:50.758568+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:38:51.089696+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T15:38:51.435936+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:38:51.769340+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T15:38:52.101456+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:38:52.438228+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T15:38:52.772586+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T15:38:53.110005+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T15:38:53.447922+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T15:38:53.780238+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:38:54.119687+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T15:38:54.124606+03:00] request.INFO: Matched route "liste_articles". {"route":"liste_articles","route_parameters":{"_route":"liste_articles","_controller":"App\\Controller\\SimpleUserController::liste_articles"},"request_uri":"https://localhost:8000/articles","method":"GET"} []
[2022-05-17T15:38:54.124947+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T15:38:54.125941+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T15:38:56.283602+03:00] doctrine.DEBUG: Executing query: SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table {"sql":"SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table"} []
[2022-05-17T15:38:56.594943+03:00] doctrine.DEBUG: Executing query: SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5 {"sql":"SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5"} []
[2022-05-17T15:38:56.902437+03:00] doctrine.DEBUG: Executing statement: SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC (parameters: array{"1":11,"2":12,"3":13,"4":14,"5":15}, types: array{"1":1,"2":1,"3":1,"4":1,"5":1}) {"sql":"SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC","params":{"1":11,"2":12,"3":13,"4":14,"5":15},"types":{"1":1,"2":1,"3":1,"4":1,"5":1}} []
[2022-05-17T15:38:57.212935+03:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2022-05-17T15:38:57.512964+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T15:38:57.829028+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T15:38:58.140877+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T15:38:58.440778+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T15:38:58.744037+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:38:59.040662+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T15:38:59.365726+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:38:59.669233+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T15:38:59.981149+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:39:00.281134+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T15:39:00.591069+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T15:39:00.894025+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T15:39:01.191080+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T15:39:01.490748+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:39:01.806081+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T15:39:01.810928+03:00] request.INFO: Matched route "app_base". {"route":"app_base","route_parameters":{"_route":"app_base","_controller":"App\\Controller\\FirstController::index"},"request_uri":"https://localhost:8000/","method":"GET"} []
[2022-05-17T15:39:01.811564+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T15:39:01.816760+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T15:39:03.959564+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T15:39:04.273203+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T15:39:04.575862+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T15:39:04.878869+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T15:39:05.206851+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:39:05.501716+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T15:39:05.819690+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:39:06.111421+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T15:39:06.427179+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:39:06.731298+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T15:39:07.048205+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T15:39:07.356861+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T15:39:07.669139+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T15:39:07.978337+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:39:08.281142+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T15:39:08.284897+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"7ec70b"},"request_uri":"https://localhost:8000/_wdt/7ec70b","method":"GET"} []
[2022-05-17T15:39:08.374488+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/favicon.ico" (from "https://localhost:8000/articles")" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/favicon.ico\" (from \"https://localhost:8000/articles\") at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T15:39:08.432830+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T15:39:10.603374+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T15:39:10.941201+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T15:39:11.250856+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T15:39:11.551836+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T15:39:11.860999+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:39:12.160798+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T15:39:12.487802+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:39:12.790552+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T15:39:13.097409+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:39:13.401268+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T15:39:13.709327+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T15:39:14.010205+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T15:39:14.327358+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T15:39:14.627951+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:39:14.954747+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T15:39:14.958301+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e4fb70"},"request_uri":"https://localhost:8000/_wdt/e4fb70","method":"GET"} []
[2022-05-17T15:39:14.966835+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/favicon.ico" (from "https://localhost:8000/")" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/favicon.ico\" (from \"https://localhost:8000/\") at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T15:39:14.984551+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T15:39:17.135679+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T15:39:17.446249+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T15:39:17.749059+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T15:39:18.045897+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T15:39:18.354993+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:39:18.662739+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T15:39:18.971974+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:39:19.272609+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T15:39:19.573517+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:39:19.882338+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T15:39:20.185250+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T15:39:20.485267+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T15:39:20.784343+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T15:39:21.087903+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T15:39:21.405226+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T16:18:02.999694+03:00] request.INFO: Matched route "liste_articles". {"route":"liste_articles","route_parameters":{"_route":"liste_articles","_controller":"App\\Controller\\SimpleUserController::liste_articles"},"request_uri":"https://localhost:8000/articles","method":"GET"} []
[2022-05-17T16:18:03.000091+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T16:18:03.001387+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T16:18:05.298759+03:00] doctrine.DEBUG: Executing query: SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table {"sql":"SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table"} []
[2022-05-17T16:18:05.630651+03:00] doctrine.DEBUG: Executing query: SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5 {"sql":"SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5"} []
[2022-05-17T16:18:05.984603+03:00] doctrine.DEBUG: Executing statement: SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC (parameters: array{"1":11,"2":12,"3":13,"4":14,"5":15}, types: array{"1":1,"2":1,"3":1,"4":1,"5":1}) {"sql":"SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC","params":{"1":11,"2":12,"3":13,"4":14,"5":15},"types":{"1":1,"2":1,"3":1,"4":1,"5":1}} []
[2022-05-17T16:18:06.330947+03:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2022-05-17T16:18:06.653780+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T16:18:07.042379+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T16:18:07.371528+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T16:18:07.696303+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T16:18:08.039653+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T16:18:08.366363+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T16:18:08.707706+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T16:18:09.027383+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T16:18:09.356330+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T16:18:09.677271+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T16:18:10.002985+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T16:18:10.337342+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T16:18:10.658167+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T16:18:10.997190+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T16:18:11.343120+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T16:18:11.378131+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"599c1a"},"request_uri":"https://localhost:8000/_wdt/599c1a","method":"GET"} []
[2022-05-17T16:18:19.563335+03:00] request.INFO: Matched route "app_base". {"route":"app_base","route_parameters":{"_route":"app_base","_controller":"App\\Controller\\FirstController::index"},"request_uri":"https://localhost:8000/","method":"GET"} []
[2022-05-17T16:18:19.563625+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T16:18:19.566111+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T16:18:22.816790+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T16:18:23.145744+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T16:18:23.461425+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T16:18:23.758631+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T16:18:24.069613+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T16:18:24.368581+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T16:18:24.674485+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T16:18:24.968595+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T16:18:25.269466+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T16:18:25.574262+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T16:18:25.876529+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T16:18:26.194368+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T16:18:26.488446+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T16:18:26.789309+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T16:18:27.094413+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T16:18:27.124638+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"55d293"},"request_uri":"https://localhost:8000/_wdt/55d293","method":"GET"} []
[2022-05-17T16:23:10.601091+03:00] request.INFO: Matched route "liste_articles". {"route":"liste_articles","route_parameters":{"_route":"liste_articles","_controller":"App\\Controller\\SimpleUserController::liste_articles"},"request_uri":"https://localhost:8000/articles","method":"GET"} []
[2022-05-17T16:23:10.608632+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T16:23:10.657618+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T16:23:13.146407+03:00] doctrine.DEBUG: Executing query: SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table {"sql":"SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table"} []
[2022-05-17T16:23:13.503722+03:00] doctrine.DEBUG: Executing query: SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5 {"sql":"SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5"} []
[2022-05-17T16:23:13.868346+03:00] doctrine.DEBUG: Executing statement: SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC (parameters: array{"1":11,"2":12,"3":13,"4":14,"5":15}, types: array{"1":1,"2":1,"3":1,"4":1,"5":1}) {"sql":"SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC","params":{"1":11,"2":12,"3":13,"4":14,"5":15},"types":{"1":1,"2":1,"3":1,"4":1,"5":1}} []
[2022-05-17T16:23:14.244344+03:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2022-05-17T16:23:14.625742+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T16:23:14.976807+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T16:23:15.318924+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T16:23:15.657165+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T16:23:16.014523+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T16:23:16.374002+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T16:23:16.733603+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T16:23:17.086028+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T16:23:17.443243+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T16:23:17.787138+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T16:23:18.138342+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T16:23:18.479175+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T16:23:18.822172+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T16:23:19.175305+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T16:23:19.577174+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T16:23:19.615323+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"4eb71e"},"request_uri":"https://localhost:8000/_wdt/4eb71e","method":"GET"} []
[2022-05-17T16:53:32.322388+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/dev/ContainerTVTYLUo/App_KernelDevDebugContainer.php","line":1072,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T17:03:04.785822+03:00] request.INFO: Matched route "liste_articles". {"route":"liste_articles","route_parameters":{"_route":"liste_articles","_controller":"App\\Controller\\SimpleUserController::liste_articles"},"request_uri":"https://localhost:8000/","method":"GET"} []
[2022-05-17T17:03:04.790093+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T17:03:04.822576+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T17:03:07.694859+03:00] doctrine.DEBUG: Executing query: SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table {"sql":"SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table"} []
[2022-05-17T17:03:08.009437+03:00] doctrine.DEBUG: Executing query: SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5 {"sql":"SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5"} []
[2022-05-17T17:03:08.339700+03:00] doctrine.DEBUG: Executing statement: SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC (parameters: array{"1":11,"2":12,"3":13,"4":14,"5":15}, types: array{"1":1,"2":1,"3":1,"4":1,"5":1}) {"sql":"SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC","params":{"1":11,"2":12,"3":13,"4":14,"5":15},"types":{"1":1,"2":1,"3":1,"4":1,"5":1}} []
[2022-05-17T17:03:08.966464+03:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2022-05-17T17:03:09.287164+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:03:09.595397+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T17:03:09.898323+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T17:03:10.211338+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:03:10.529413+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:03:10.824275+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T17:03:11.150882+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:03:11.454294+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T17:03:11.759374+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:03:12.054374+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T17:03:12.360502+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T17:03:12.660316+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T17:03:12.958292+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T17:03:13.267370+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:03:13.585902+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T17:03:13.628651+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e6f4e6"},"request_uri":"https://localhost:8000/_wdt/e6f4e6","method":"GET"} []
[2022-05-17T17:03:17.499036+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/incendies-en-australie-accident-rechauffement-climatique" (from "https://localhost:8000/")" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/incendies-en-australie-accident-rechauffement-climatique\" (from \"https://localhost:8000/\") at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/incendies-en-australie-accident-rechauffement-climatique/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T17:03:17.543325+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T17:03:19.697797+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:03:20.037718+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T17:03:20.348487+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T17:03:20.670421+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:03:20.984841+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:03:21.304385+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T17:03:21.842932+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:03:22.160670+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T17:03:22.475528+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:03:22.789471+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T17:03:23.097618+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T17:03:23.401436+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T17:03:23.701685+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T17:03:24.011487+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:03:24.325459+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T17:03:24.455106+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"b4f164"},"request_uri":"https://localhost:8000/_wdt/b4f164","method":"GET"} []
[2022-05-17T17:03:41.996385+03:00] request.INFO: Matched route "liste_articles". {"route":"liste_articles","route_parameters":{"_route":"liste_articles","_controller":"App\\Controller\\SimpleUserController::liste_articles"},"request_uri":"https://localhost:8000/","method":"GET"} []
[2022-05-17T17:03:41.996683+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T17:03:41.997776+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T17:03:44.605721+03:00] doctrine.DEBUG: Executing query: SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table {"sql":"SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table"} []
[2022-05-17T17:03:44.919177+03:00] doctrine.DEBUG: Executing query: SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5 {"sql":"SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5"} []
[2022-05-17T17:03:45.225241+03:00] doctrine.DEBUG: Executing statement: SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC (parameters: array{"1":11,"2":12,"3":13,"4":14,"5":15}, types: array{"1":1,"2":1,"3":1,"4":1,"5":1}) {"sql":"SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC","params":{"1":11,"2":12,"3":13,"4":14,"5":15},"types":{"1":1,"2":1,"3":1,"4":1,"5":1}} []
[2022-05-17T17:03:45.551986+03:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2022-05-17T17:03:45.866172+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:03:46.203826+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T17:03:46.515777+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T17:03:46.837049+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:03:47.147066+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:03:47.461676+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T17:03:47.784042+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:03:48.092687+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T17:03:48.405983+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:03:48.712847+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T17:03:49.048845+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T17:03:49.360938+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T17:03:49.663171+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T17:03:49.972829+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:03:50.286387+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T17:37:18.032506+03:00] request.INFO: Matched route "liste_articles". {"route":"liste_articles","route_parameters":{"_route":"liste_articles","_controller":"App\\Controller\\SimpleUserController::liste_articles"},"request_uri":"https://localhost:8000/articles","method":"GET"} []
[2022-05-17T17:37:18.033521+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T17:37:18.039539+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T17:37:21.695748+03:00] doctrine.DEBUG: Executing query: SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table {"sql":"SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table"} []
[2022-05-17T17:37:22.214008+03:00] doctrine.DEBUG: Executing query: SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5 {"sql":"SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5"} []
[2022-05-17T17:37:22.734063+03:00] doctrine.DEBUG: Executing statement: SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC (parameters: array{"1":11,"2":12,"3":13,"4":14,"5":15}, types: array{"1":1,"2":1,"3":1,"4":1,"5":1}) {"sql":"SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC","params":{"1":11,"2":12,"3":13,"4":14,"5":15},"types":{"1":1,"2":1,"3":1,"4":1,"5":1}} []
[2022-05-17T17:37:23.196643+03:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2022-05-17T17:37:23.598977+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:37:24.041283+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T17:37:24.433705+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T17:37:24.845211+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:37:25.261874+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:37:25.661290+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T17:37:26.062589+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:37:26.460958+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T17:37:26.867667+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:37:27.280788+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T17:37:27.641371+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T17:37:28.004094+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T17:37:28.429485+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T17:37:28.836742+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:37:29.272829+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T17:37:29.332014+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"8cdca8"},"request_uri":"https://localhost:8000/_wdt/8cdca8","method":"GET"} []
[2022-05-17T17:37:31.199781+03:00] request.INFO: Matched route "fiche_article". {"route":"fiche_article","route_parameters":{"_route":"fiche_article","_controller":"App\\Controller\\SimpleUserController::ficheArticle","category":"accident","url":"incendies-en-australie-accident-rechauffement-climatique","id":"11"},"request_uri":"https://localhost:8000/accident/incendies-en-australie-accident-rechauffement-climatique_11.html","method":"GET"} []
[2022-05-17T17:37:31.200580+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T17:37:31.202423+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T17:37:34.068899+03:00] request.CRITICAL: Uncaught PHP Exception Doctrine\ORM\Query\QueryException: "[Semantical Error] line 0, col 43 near 'url_path = :urlPath': Error: Class App\Entity\Article has no field or association named url_path" at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php line 43 {"exception":"[object] (Doctrine\\ORM\\Query\\QueryException(code: 0): [Semantical Error] line 0, col 43 near 'url_path = :urlPath': Error: Class App\\Entity\\Article has no field or association named url_path at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:43)\n[previous exception] [object] (Doctrine\\ORM\\Query\\QueryException(code: 0): SELECT a FROM App\\Entity\\Article a WHERE a.url_path = :urlPath AND a.id = :id ORDER BY a.id ASC at /home/durandal/Documents/GitHub/web-design-2/vendor/doctrine/orm/lib/Doctrine/ORM/Query/QueryException.php:21)"} []
[2022-05-17T17:37:34.139178+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:37:34.565268+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T17:37:35.084278+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T17:37:35.608960+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:37:35.989802+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:37:36.415016+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T17:37:36.756770+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:37:37.133422+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T17:37:37.541200+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:37:37.967877+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T17:37:38.305251+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T17:37:38.665624+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T17:37:39.077098+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T17:37:39.485812+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:37:39.912828+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T17:37:40.039923+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0d5ab7"},"request_uri":"https://localhost:8000/_wdt/0d5ab7","method":"GET"} []
[2022-05-17T17:38:34.359561+03:00] request.INFO: Matched route "liste_articles". {"route":"liste_articles","route_parameters":{"_route":"liste_articles","_controller":"App\\Controller\\SimpleUserController::liste_articles"},"request_uri":"https://localhost:8000/articles","method":"GET"} []
[2022-05-17T17:38:34.364703+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T17:38:34.398724+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T17:38:37.287422+03:00] doctrine.DEBUG: Executing query: SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table {"sql":"SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table"} []
[2022-05-17T17:38:38.126701+03:00] doctrine.DEBUG: Executing query: SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5 {"sql":"SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5"} []
[2022-05-17T17:38:38.466412+03:00] doctrine.DEBUG: Executing statement: SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC (parameters: array{"1":11,"2":12,"3":13,"4":14,"5":15}, types: array{"1":1,"2":1,"3":1,"4":1,"5":1}) {"sql":"SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC","params":{"1":11,"2":12,"3":13,"4":14,"5":15},"types":{"1":1,"2":1,"3":1,"4":1,"5":1}} []
[2022-05-17T17:38:38.967154+03:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2022-05-17T17:38:39.366444+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:38:39.794674+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T17:38:40.147119+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T17:38:40.525635+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:38:41.040679+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:38:41.355143+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T17:38:41.717744+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:38:42.028484+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T17:38:42.372321+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:38:42.863699+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T17:38:43.229242+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T17:38:43.630051+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T17:38:43.940714+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T17:38:44.297722+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:38:44.854656+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T17:38:44.880313+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"88f6ac"},"request_uri":"https://localhost:8000/_wdt/88f6ac","method":"GET"} []
[2022-05-17T17:38:51.788938+03:00] request.INFO: Matched route "fiche_article". {"route":"fiche_article","route_parameters":{"_route":"fiche_article","_controller":"App\\Controller\\SimpleUserController::ficheArticle","category":"accident","url":"incendies-en-australie-accident-rechauffement-climatique","id":"11"},"request_uri":"https://localhost:8000/accident/incendies-en-australie-accident-rechauffement-climatique_11.html","method":"GET"} []
[2022-05-17T17:38:51.789182+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T17:38:51.790077+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T17:38:54.756129+03:00] doctrine.DEBUG: Executing statement: SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.url_path = ? AND a0_.id = ? ORDER BY a0_.id ASC (parameters: array{"1":"incendies-en-australie-accident-rechauffement-climatique","2":11}, types: array{"1":2,"2":1}) {"sql":"SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.url_path = ? AND a0_.id = ? ORDER BY a0_.id ASC","params":{"1":"incendies-en-australie-accident-rechauffement-climatique","2":11},"types":{"1":2,"2":1}} []
[2022-05-17T17:38:55.285757+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:38:55.770777+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T17:38:56.207225+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T17:38:56.653685+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:38:57.228156+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:38:57.660980+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T17:38:58.236645+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:38:58.726523+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T17:38:59.101282+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:38:59.878464+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T17:39:00.547643+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T17:39:01.008515+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T17:39:01.344065+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T17:39:01.822361+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:39:02.210737+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T17:39:02.263504+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/accident/images/blog/6.jpg" (from "https://localhost:8000/accident/incendies-en-australie-accident-rechauffement-climatique_11.html")" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/accident/images/blog/6.jpg\" (from \"https://localhost:8000/accident/incendies-en-australie-accident-rechauffement-climatique_11.html\") at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/accident/images/blog/6.jpg/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T17:39:02.300687+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T17:39:06.329847+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:39:06.747529+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T17:39:07.145225+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T17:39:07.557528+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:39:08.120789+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:39:08.606467+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T17:39:09.149780+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:39:09.529447+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T17:39:09.933408+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:39:10.352776+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T17:39:10.834263+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T17:39:11.241587+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T17:39:11.673955+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T17:39:12.066873+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:39:12.840685+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T17:39:12.844419+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"6b6808"},"request_uri":"https://localhost:8000/_wdt/6b6808","method":"GET"} []
[2022-05-17T17:39:12.854843+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/accident/images/blog/5.jpg" (from "https://localhost:8000/accident/incendies-en-australie-accident-rechauffement-climatique_11.html")" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/accident/images/blog/5.jpg\" (from \"https://localhost:8000/accident/incendies-en-australie-accident-rechauffement-climatique_11.html\") at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/accident/images/blog/5.jpg/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T17:39:12.869505+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T17:39:17.010971+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:39:17.555842+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T17:39:18.445288+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T17:39:19.166171+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:39:19.747979+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:39:20.263592+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T17:39:20.798813+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:39:21.379576+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T17:39:21.878534+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:39:22.301033+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T17:39:22.737283+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T17:39:23.112422+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T17:39:23.564508+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T17:39:23.938122+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:39:24.393996+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T17:39:24.398483+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/accident/images/blog/7.jpg" (from "https://localhost:8000/accident/incendies-en-australie-accident-rechauffement-climatique_11.html")" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/accident/images/blog/7.jpg\" (from \"https://localhost:8000/accident/incendies-en-australie-accident-rechauffement-climatique_11.html\") at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/accident/images/blog/7.jpg/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T17:39:24.412208+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T17:44:10.216421+03:00] php.DEBUG: User Notice: Install the curl extension or run "composer require amphp/http-client" to perform async HTTP operations, including full HTTP/2 support {"exception":{"Symfony\\Component\\ErrorHandler\\Exception\\SilencedErrorContext":{"severity":1024,"file":"/home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-client/HttpClient.php","line":64,"trace":[{"file":"/home/durandal/Documents/GitHub/web-design-2/var/cache/de_/ContainerS12xzEp/App_KernelDevDebugContainer.php","line":1072,"function":"create","class":"Symfony\\Component\\HttpClient\\HttpClient","type":"::"}],"count":1}}} []
[2022-05-17T17:56:30.432471+03:00] request.INFO: Matched route "app_base". {"route":"app_base","route_parameters":{"_route":"app_base","_controller":"App\\Controller\\FirstController::index"},"request_uri":"https://localhost:8000/","method":"GET"} []
[2022-05-17T17:56:30.437643+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T17:56:30.467128+03:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Could not find the entrypoints file from Webpack: the file "/home/durandal/Documents/GitHub/web-design-2/public/build/entrypoints.json" does not exist.")." at /home/durandal/Documents/GitHub/web-design-2/templates/base.html.twig line 107 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Could not find the entrypoints file from Webpack: the file \"/home/durandal/Documents/GitHub/web-design-2/public/build/entrypoints.json\" does not exist.\"). at /home/durandal/Documents/GitHub/web-design-2/templates/base.html.twig:107)\n[previous exception] [object] (InvalidArgumentException(code: 0): Could not find the entrypoints file from Webpack: the file \"/home/durandal/Documents/GitHub/web-design-2/public/build/entrypoints.json\" does not exist. at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/webpack-encore-bundle/src/Asset/EntrypointLookup.php:124)"} []
[2022-05-17T17:56:30.541300+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T17:56:33.573033+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:56:34.032332+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T17:56:34.646316+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T17:56:35.045281+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:56:35.473889+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:56:35.873217+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T17:56:36.213571+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:56:36.682723+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T17:56:37.092637+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:56:37.546891+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T17:56:37.933535+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T17:56:38.331356+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T17:56:38.951565+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T17:56:39.343215+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:56:39.791238+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T17:56:39.920869+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"01a9c7"},"request_uri":"https://localhost:8000/_wdt/01a9c7","method":"GET"} []
[2022-05-17T17:58:21.498749+03:00] request.INFO: Matched route "app_base". {"route":"app_base","route_parameters":{"_route":"app_base","_controller":"App\\Controller\\FirstController::index"},"request_uri":"https://localhost:8000/","method":"GET"} []
[2022-05-17T17:58:21.503600+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T17:58:21.523767+03:00] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Could not find the entrypoints file from Webpack: the file "/home/durandal/Documents/GitHub/web-design-2/public/build/entrypoints.json" does not exist.")." at /home/durandal/Documents/GitHub/web-design-2/templates/base.html.twig line 107 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Could not find the entrypoints file from Webpack: the file \"/home/durandal/Documents/GitHub/web-design-2/public/build/entrypoints.json\" does not exist.\"). at /home/durandal/Documents/GitHub/web-design-2/templates/base.html.twig:107)\n[previous exception] [object] (InvalidArgumentException(code: 0): Could not find the entrypoints file from Webpack: the file \"/home/durandal/Documents/GitHub/web-design-2/public/build/entrypoints.json\" does not exist. at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/webpack-encore-bundle/src/Asset/EntrypointLookup.php:124)"} []
[2022-05-17T17:58:21.600012+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T17:58:24.330619+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:58:24.694074+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T17:58:25.193939+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T17:58:25.597328+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:58:26.013107+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:58:26.462874+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T17:58:26.843857+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:58:27.399514+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T17:58:27.960557+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:58:28.330268+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T17:58:28.842837+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T17:58:29.337538+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T17:58:29.739183+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T17:58:30.289868+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:58:30.823590+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T17:58:30.939020+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"0cb623"},"request_uri":"https://localhost:8000/_wdt/0cb623","method":"GET"} []
[2022-05-17T17:59:27.860884+03:00] request.INFO: Matched route "app_base". {"route":"app_base","route_parameters":{"_route":"app_base","_controller":"App\\Controller\\FirstController::index"},"request_uri":"https://localhost:8000/","method":"GET"} []
[2022-05-17T17:59:27.866296+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T17:59:27.913860+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T17:59:30.780861+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:59:31.184654+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T17:59:31.628448+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T17:59:32.101737+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:59:32.453944+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:59:32.817709+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T17:59:33.430406+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:59:33.781161+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T17:59:34.149105+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:59:34.557621+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T17:59:34.973279+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T17:59:35.376852+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T17:59:35.793382+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T17:59:36.253658+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:59:36.733922+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T17:59:36.778240+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"d9b975"},"request_uri":"https://localhost:8000/_wdt/d9b975","method":"GET"} []
[2022-05-17T17:59:45.652278+03:00] request.INFO: Matched route "liste_articles". {"route":"liste_articles","route_parameters":{"_route":"liste_articles","_controller":"App\\Controller\\SimpleUserController::liste_articles"},"request_uri":"https://localhost:8000/articles","method":"GET"} []
[2022-05-17T17:59:45.652598+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T17:59:45.662508+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T17:59:48.411406+03:00] doctrine.DEBUG: Executing query: SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table {"sql":"SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table"} []
[2022-05-17T17:59:48.829455+03:00] doctrine.DEBUG: Executing query: SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5 {"sql":"SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5"} []
[2022-05-17T17:59:49.211261+03:00] doctrine.DEBUG: Executing statement: SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC (parameters: array{"1":11,"2":12,"3":13,"4":14,"5":15}, types: array{"1":1,"2":1,"3":1,"4":1,"5":1}) {"sql":"SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC","params":{"1":11,"2":12,"3":13,"4":14,"5":15},"types":{"1":1,"2":1,"3":1,"4":1,"5":1}} []
[2022-05-17T17:59:49.628073+03:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2022-05-17T17:59:49.964820+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:59:50.433697+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T17:59:50.841306+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T17:59:51.255973+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T17:59:51.681936+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:59:52.069534+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T17:59:52.449753+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:59:52.889644+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T17:59:53.299013+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:59:53.709314+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T17:59:54.118651+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T17:59:54.529494+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T17:59:54.938733+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T17:59:55.348697+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T17:59:55.772095+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T17:59:55.825004+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"a310d4"},"request_uri":"https://localhost:8000/_wdt/a310d4","method":"GET"} []
[2022-05-17T18:00:18.745399+03:00] request.INFO: Matched route "liste_articles". {"route":"liste_articles","route_parameters":{"_route":"liste_articles","_controller":"App\\Controller\\SimpleUserController::liste_articles"},"request_uri":"https://localhost:8000/articles","method":"GET"} []
[2022-05-17T18:00:18.745630+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T18:00:18.746452+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T18:00:21.767920+03:00] doctrine.DEBUG: Executing query: SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table {"sql":"SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table"} []
[2022-05-17T18:00:22.283886+03:00] doctrine.DEBUG: Executing query: SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5 {"sql":"SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5"} []
[2022-05-17T18:00:22.716535+03:00] doctrine.DEBUG: Executing statement: SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC (parameters: array{"1":11,"2":12,"3":13,"4":14,"5":15}, types: array{"1":1,"2":1,"3":1,"4":1,"5":1}) {"sql":"SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC","params":{"1":11,"2":12,"3":13,"4":14,"5":15},"types":{"1":1,"2":1,"3":1,"4":1,"5":1}} []
[2022-05-17T18:00:23.202721+03:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2022-05-17T18:00:23.588535+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T18:00:24.137193+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T18:00:24.641329+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T18:00:25.148323+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T18:00:25.505518+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:00:25.885206+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T18:00:26.434492+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:00:26.833387+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T18:00:27.293230+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:00:27.673293+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T18:00:28.027663+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T18:00:28.421337+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T18:00:28.764177+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T18:00:29.345253+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:00:29.765078+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T18:00:29.816982+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"e5ddad"},"request_uri":"https://localhost:8000/_wdt/e5ddad","method":"GET"} []
[2022-05-17T18:00:44.146557+03:00] request.INFO: Matched route "fiche_article". {"route":"fiche_article","route_parameters":{"_route":"fiche_article","_controller":"App\\Controller\\SimpleUserController::ficheArticle","category":"accident","url":"incendies-en-australie-accident-rechauffement-climatique","id":"15"},"request_uri":"https://localhost:8000/accident/incendies-en-australie-accident-rechauffement-climatique_15.html","method":"GET"} []
[2022-05-17T18:00:44.146990+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T18:00:44.148388+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T18:00:47.064476+03:00] doctrine.DEBUG: Executing statement: SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.url_path = ? AND a0_.id = ? ORDER BY a0_.id ASC (parameters: array{"1":"incendies-en-australie-accident-rechauffement-climatique","2":15}, types: array{"1":2,"2":1}) {"sql":"SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.url_path = ? AND a0_.id = ? ORDER BY a0_.id ASC","params":{"1":"incendies-en-australie-accident-rechauffement-climatique","2":15},"types":{"1":2,"2":1}} []
[2022-05-17T18:00:47.479872+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T18:00:47.857368+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T18:00:48.285404+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T18:00:48.699380+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T18:00:49.105541+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:00:49.517341+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T18:00:49.914224+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:00:50.333494+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T18:00:50.741825+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:00:51.153288+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T18:00:51.565216+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T18:00:52.084854+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T18:00:52.487788+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T18:00:52.902940+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:00:53.318731+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T18:00:53.359366+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/accident/images/blog/1.jpg" (from "https://localhost:8000/accident/incendies-en-australie-accident-rechauffement-climatique_15.html")" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/accident/images/blog/1.jpg\" (from \"https://localhost:8000/accident/incendies-en-australie-accident-rechauffement-climatique_15.html\") at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/accident/images/blog/1.jpg/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T18:00:53.410306+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T18:00:56.214482+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T18:00:56.548369+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T18:00:57.011156+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T18:00:57.602694+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T18:00:57.993599+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:00:58.405025+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T18:00:58.788673+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:00:59.141487+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T18:00:59.585556+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:00:59.965075+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T18:01:00.369108+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T18:02:06.548299+03:00] request.INFO: Matched route "app_base". {"route":"app_base","route_parameters":{"_route":"app_base","_controller":"App\\Controller\\FirstController::index"},"request_uri":"https://localhost:8000/","method":"GET"} []
[2022-05-17T18:02:06.552500+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T18:02:06.608450+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T18:02:10.131550+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T18:02:10.511669+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T18:02:10.857136+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T18:02:11.317525+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T18:02:11.761365+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:02:12.141260+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T18:02:12.649848+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:02:12.954131+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T18:02:13.368747+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:02:13.692661+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T18:02:14.049824+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T18:02:14.511808+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T18:02:14.929043+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T18:02:15.316751+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:02:15.750812+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T18:02:15.777764+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/build/images/template-imgs/recyclage-rechauffement-climatique.png" (from "https://localhost:8000/")" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/build/images/template-imgs/recyclage-rechauffement-climatique.png\" (from \"https://localhost:8000/\") at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/build/images/template-imgs/recyclage-rechauffement-climatique.png/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T18:02:15.824527+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T18:02:18.492821+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T18:02:18.901407+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T18:02:19.317091+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T18:02:19.712734+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T18:02:20.125868+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:02:20.533395+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T18:02:20.874140+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:02:21.257503+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T18:02:21.676242+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:02:22.069139+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T18:02:22.476702+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T18:02:22.897601+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T18:02:23.297190+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T18:02:23.706170+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:02:24.128230+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T18:02:24.131815+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"fe0f81"},"request_uri":"https://localhost:8000/_wdt/fe0f81","method":"GET"} []
[2022-05-17T18:02:25.733388+03:00] request.INFO: Matched route "liste_articles". {"route":"liste_articles","route_parameters":{"_route":"liste_articles","_controller":"App\\Controller\\SimpleUserController::liste_articles"},"request_uri":"https://localhost:8000/articles","method":"GET"} []
[2022-05-17T18:02:25.733675+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T18:02:25.741331+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T18:02:28.641248+03:00] doctrine.DEBUG: Executing query: SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table {"sql":"SELECT COUNT(*) AS dctrn_count FROM (SELECT DISTINCT id_0 FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7 FROM article a0_ ORDER BY a0_.id ASC) dctrn_result) dctrn_table"} []
[2022-05-17T18:02:29.147212+03:00] doctrine.DEBUG: Executing query: SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5 {"sql":"SELECT DISTINCT id_0, MIN(sclr_8) AS dctrn_minrownum FROM (SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, ROW_NUMBER() OVER(ORDER BY a0_.id ASC) AS sclr_8 FROM article a0_) dctrn_result GROUP BY id_0 ORDER BY dctrn_minrownum ASC LIMIT 5"} []
[2022-05-17T18:02:29.559383+03:00] doctrine.DEBUG: Executing statement: SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC (parameters: array{"1":11,"2":12,"3":13,"4":14,"5":15}, types: array{"1":1,"2":1,"3":1,"4":1,"5":1}) {"sql":"SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?) ORDER BY a0_.id ASC","params":{"1":11,"2":12,"3":13,"4":14,"5":15},"types":{"1":1,"2":1,"3":1,"4":1,"5":1}} []
[2022-05-17T18:02:29.992237+03:00] doctrine.DEBUG: Executing statement: SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ? (parameters: array{"1":3}, types: array{"1":1}) {"sql":"SELECT t0.id AS id_1, t0.entitled AS entitled_2 FROM category t0 WHERE t0.id = ?","params":{"1":3},"types":{"1":1}} []
[2022-05-17T18:02:30.359574+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T18:02:30.873473+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T18:02:31.280871+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T18:02:31.693360+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T18:02:32.104938+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:02:32.509192+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T18:02:32.901636+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:02:33.329269+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T18:02:33.742920+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:02:34.357294+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T18:02:34.867375+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T18:02:35.284056+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T18:02:35.686175+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T18:02:36.110108+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:02:36.709980+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T18:02:36.735554+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET https://localhost:8000/build/images/template-imgs/recyclage-rechauffement-climatique.png" (from "https://localhost:8000/articles")" at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php line 130 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET https://localhost:8000/build/images/template-imgs/recyclage-rechauffement-climatique.png\" (from \"https://localhost:8000/articles\") at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/http-kernel/EventListener/RouterListener.php:130)\n[previous exception] [object] (Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/build/images/template-imgs/recyclage-rechauffement-climatique.png/\". at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:74)"} []
[2022-05-17T18:02:36.764600+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T18:02:39.474235+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T18:02:40.597690+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T18:02:40.987116+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T18:02:41.755391+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T18:02:42.233418+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:02:42.573236+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T18:02:43.049644+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:02:43.359089+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T18:02:43.669381+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:02:44.021254+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T18:02:44.349313+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T18:02:44.651598+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T18:02:45.003094+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T18:02:45.318970+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:02:45.717322+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T18:02:45.721454+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"3fddb5"},"request_uri":"https://localhost:8000/_wdt/3fddb5","method":"GET"} []
[2022-05-17T18:04:55.888174+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T18:05:07.250175+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T18:06:48.558786+03:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\Admin\\DashboardController::index"},"request_uri":"https://localhost:8000/admin","method":"GET"} []
[2022-05-17T18:06:48.559428+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T18:06:48.569993+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T18:06:51.235458+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T18:06:51.635867+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T18:06:52.045475+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T18:06:52.456445+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T18:06:52.874276+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:06:53.377483+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T18:06:53.742468+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:06:54.205406+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T18:06:54.602422+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:06:55.014941+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T18:06:55.430857+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T18:06:55.953432+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T18:06:56.349696+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T18:06:56.758153+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:06:57.183689+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T18:06:57.195872+03:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\Admin\\DashboardController::index"},"request_uri":"https://localhost:8000/admin?crudAction=index&crudControllerFqcn=App%5CController%5CAdmin%5CArticleCrudController","method":"GET"} []
[2022-05-17T18:06:57.196751+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T18:06:57.203788+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T18:06:59.876286+03:00] doctrine.DEBUG: Executing query: SELECT DISTINCT a0_.id AS id_0 FROM article a0_ LIMIT 20 {"sql":"SELECT DISTINCT a0_.id AS id_0 FROM article a0_ LIMIT 20"} []
[2022-05-17T18:07:00.351892+03:00] doctrine.DEBUG: Executing statement: SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) (parameters: array{"1":11,"2":12,"3":13,"4":14,"5":15,"6":16,"7":17,"8":18,"9":19,"10":20}, types: array{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1}) {"sql":"SELECT a0_.id AS id_0, a0_.header AS header_1, a0_.title AS title_2, a0_.created_at AS created_at_3, a0_.content AS content_4, a0_.url_path AS url_path_5, a0_.sum_up AS sum_up_6, a0_.author_name AS author_name_7, a0_.category_id AS category_id_8 FROM article a0_ WHERE a0_.id IN (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)","params":{"1":11,"2":12,"3":13,"4":14,"5":15,"6":16,"7":17,"8":18,"9":19,"10":20},"types":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1}} []
[2022-05-17T18:07:01.074791+03:00] doctrine.DEBUG: Executing query: SELECT count(a0_.id) AS sclr_0 FROM article a0_ {"sql":"SELECT count(a0_.id) AS sclr_0 FROM article a0_"} []
[2022-05-17T18:07:01.504812+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T18:07:01.984797+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T18:07:02.385268+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T18:07:02.797509+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T18:07:03.201465+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:07:03.633287+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T18:07:03.993619+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:07:04.541862+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T18:07:05.051791+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:07:05.486643+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T18:07:05.988369+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T18:07:06.377160+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T18:07:06.789804+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T18:07:07.198671+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:07:07.636815+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T18:07:07.728642+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"45f9c6"},"request_uri":"https://localhost:8000/_wdt/45f9c6","method":"GET"} []
[2022-05-17T18:07:56.211259+03:00] console.CRITICAL: Error thrown while running command "debug:container --show-private --format=json". Message: "The "--show-private" option does not exist." {"exception":"[object] (Symfony\\Component\\Console\\Exception\\RuntimeException(code: 0): The \"--show-private\" option does not exist. at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/console/Input/ArgvInput.php:220)","command":"debug:container --show-private --format=json","message":"The \"--show-private\" option does not exist."} []
[2022-05-17T18:07:56.211405+03:00] console.DEBUG: Command "debug:container --show-private --format=json" exited with code "1" {"command":"debug:container --show-private --format=json","code":1} []
[2022-05-17T18:08:00.857664+03:00] console.CRITICAL: Error thrown while running command "debug:container --show-private --format=json". Message: "The "--show-private" option does not exist." {"exception":"[object] (Symfony\\Component\\Console\\Exception\\RuntimeException(code: 0): The \"--show-private\" option does not exist. at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/console/Input/ArgvInput.php:220)","command":"debug:container --show-private --format=json","message":"The \"--show-private\" option does not exist."} []
[2022-05-17T18:08:00.857813+03:00] console.DEBUG: Command "debug:container --show-private --format=json" exited with code "1" {"command":"debug:container --show-private --format=json","code":1} []
[2022-05-17T18:08:17.038963+03:00] request.INFO: Matched route "admin". {"route":"admin","route_parameters":{"_route":"admin","_controller":"App\\Controller\\Admin\\DashboardController::index"},"request_uri":"https://localhost:8000/admin?crudAction=index&crudControllerFqcn=App%5CController%5CAdmin%5CArticleCrudController","method":"GET"} []
[2022-05-17T18:08:17.039411+03:00] security.DEBUG: Checking for authenticator support. {"firewall_name":"main","authenticators":0} []
[2022-05-17T18:08:17.040694+03:00] security.DEBUG: Access denied, the user is not fully authenticated; redirecting to authentication entry point. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/security-http/Firewall/AccessListener.php:97)"} []
[2022-05-17T18:08:17.040825+03:00] security.NOTICE: No Authentication entry point configured, returning a 401 HTTP response. Configure "entry_point" on the firewall "main" if you want to modify the response. [] []
[2022-05-17T18:08:17.041644+03:00] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\HttpException: "Full authentication is required to access this resource." at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/security-http/Firewall/ExceptionListener.php line 248 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\HttpException(code: 0): Full authentication is required to access this resource. at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/security-http/Firewall/ExceptionListener.php:248)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\InsufficientAuthenticationException(code: 0): Full authentication is required to access this resource. at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/security-http/Firewall/ExceptionListener.php:147)\n[previous exception] [object] (Symfony\\Component\\Security\\Core\\Exception\\AccessDeniedException(code: 403): Access Denied. at /home/durandal/Documents/GitHub/web-design-2/vendor/symfony/security-http/Firewall/AccessListener.php:97)"} []
[2022-05-17T18:08:17.062780+03:00] doctrine.INFO: Connecting with parameters array{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"} {"params":{"url":"<redacted>","driver":"pdo_pgsql","host":"ec2-52-86-115-245.compute-1.amazonaws.com","port":5432,"user":"chfgmokhtvjnyg","password":"<redacted>","driverOptions":[],"defaultTableOptions":[],"dbname":"d2hs8u73qk6i55","charset":"utf8"}} []
[2022-05-17T18:08:19.789862+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T18:08:20.197991+03:00] doctrine.DEBUG: Executing query: SELECT schema_name FROM   information_schema.schemata WHERE  schema_name NOT LIKE 'pg\_%' AND    schema_name != 'information_schema' {"sql":"SELECT schema_name\nFROM   information_schema.schemata\nWHERE  schema_name NOT LIKE 'pg\\_%'\nAND    schema_name != 'information_schema'"} []
[2022-05-17T18:08:20.609334+03:00] doctrine.DEBUG: Executing query: SHOW search_path {"sql":"SHOW search_path"} []
[2022-05-17T18:08:21.009443+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(table_name) AS table_name,                        table_schema AS schema_name                 FROM   information_schema.tables                 WHERE  table_schema NOT LIKE 'pg\_%'                 AND    table_schema != 'information_schema'                 AND    table_name != 'geometry_columns'                 AND    table_name != 'spatial_ref_sys'                 AND    table_type != 'VIEW' {"sql":"SELECT quote_ident(table_name) AS table_name,\n                       table_schema AS schema_name\n                FROM   information_schema.tables\n                WHERE  table_schema NOT LIKE 'pg\\_%'\n                AND    table_schema != 'information_schema'\n                AND    table_name != 'geometry_columns'\n                AND    table_name != 'spatial_ref_sys'\n                AND    table_type != 'VIEW'"} []
[2022-05-17T18:08:21.425837+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:08:21.837367+03:00] doctrine.DEBUG: Executing query: SELECT                     a.attnum,                     quote_ident(a.attname) AS field,                     t.typname AS type,                     format_type(a.atttypid, a.atttypmod) AS complete_type,                     (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,                     (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,                     (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM                       pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,                     a.attnotnull AS isnotnull,                     (SELECT 't'                      FROM pg_index                      WHERE c.oid = pg_index.indrelid                         AND pg_index.indkey[0] = a.attnum                         AND pg_index.indisprimary = 't'                     ) AS pri,                     (SELECT pg_get_expr(adbin, adrelid)                      FROM pg_attrdef                      WHERE c.oid = pg_attrdef.adrelid                         AND pg_attrdef.adnum=a.attnum                     ) AS default,                     (SELECT pg_description.description                         FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid                     ) AS comment                     FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n                     WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))                         AND a.attnum > 0                         AND a.attrelid = c.oid                         AND a.atttypid = t.oid                         AND n.oid = c.relnamespace                     ORDER BY a.attnum {"sql":"SELECT\n                    a.attnum,\n                    quote_ident(a.attname) AS field,\n                    t.typname AS type,\n                    format_type(a.atttypid, a.atttypmod) AS complete_type,\n                    (SELECT tc.collcollate FROM pg_catalog.pg_collation tc WHERE tc.oid = a.attcollation) AS collation,\n                    (SELECT t1.typname FROM pg_catalog.pg_type t1 WHERE t1.oid = t.typbasetype) AS domain_type,\n                    (SELECT format_type(t2.typbasetype, t2.typtypmod) FROM\n                      pg_catalog.pg_type t2 WHERE t2.typtype = 'd' AND t2.oid = a.atttypid) AS domain_complete_type,\n                    a.attnotnull AS isnotnull,\n                    (SELECT 't'\n                     FROM pg_index\n                     WHERE c.oid = pg_index.indrelid\n                        AND pg_index.indkey[0] = a.attnum\n                        AND pg_index.indisprimary = 't'\n                    ) AS pri,\n                    (SELECT pg_get_expr(adbin, adrelid)\n                     FROM pg_attrdef\n                     WHERE c.oid = pg_attrdef.adrelid\n                        AND pg_attrdef.adnum=a.attnum\n                    ) AS default,\n                    (SELECT pg_description.description\n                        FROM pg_description WHERE pg_description.objoid = c.oid AND a.attnum = pg_description.objsubid\n                    ) AS comment\n                    FROM pg_attribute a, pg_class c, pg_type t, pg_namespace n\n                    WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false))\n                        AND a.attnum > 0\n                        AND a.attrelid = c.oid\n                        AND a.atttypid = t.oid\n                        AND n.oid = c.relnamespace\n                    ORDER BY a.attnum"} []
[2022-05-17T18:08:22.185738+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:08:22.549382+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef                   FROM pg_catalog.pg_constraint r                   WHERE r.conrelid =                   (                       SELECT c.oid                       FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n                       WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace                   )                   AND r.contype = 'f' {"sql":"SELECT quote_ident(r.conname) as conname, pg_catalog.pg_get_constraintdef(r.oid, true) as condef\n                  FROM pg_catalog.pg_constraint r\n                  WHERE r.conrelid =\n                  (\n                      SELECT c.oid\n                      FROM pg_catalog.pg_class c, pg_catalog.pg_namespace n\n                      WHERE n.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND c.relname = 'doctrine_migration_versions' AND n.nspname = ANY(current_schemas(false)) AND n.oid = c.relnamespace\n                  )\n                  AND r.contype = 'f'"} []
[2022-05-17T18:08:22.961525+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:08:23.300730+03:00] doctrine.DEBUG: Executing query: SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,                        pg_index.indkey, pg_index.indrelid,                        pg_get_expr(indpred, indrelid) AS where                  FROM pg_class, pg_index                  WHERE oid IN (                     SELECT indexrelid                     FROM pg_index si, pg_class sc, pg_namespace sn                     WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))                     AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid                  ) AND pg_index.indexrelid = oid {"sql":"SELECT quote_ident(relname) as relname, pg_index.indisunique, pg_index.indisprimary,\n                       pg_index.indkey, pg_index.indrelid,\n                       pg_get_expr(indpred, indrelid) AS where\n                 FROM pg_class, pg_index\n                 WHERE oid IN (\n                    SELECT indexrelid\n                    FROM pg_index si, pg_class sc, pg_namespace sn\n                    WHERE sn.nspname NOT IN ('pg_catalog', 'information_schema', 'pg_toast') AND sc.relname = 'doctrine_migration_versions' AND sn.nspname = ANY(current_schemas(false))\n                    AND sc.oid=si.indrelid AND sc.relnamespace = sn.oid\n                 ) AND pg_index.indexrelid = oid"} []
[2022-05-17T18:08:23.623125+03:00] doctrine.DEBUG: Executing query: SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC {"sql":"SELECT attnum, attname FROM pg_attribute WHERE attrelid=742384 AND attnum IN (1) ORDER BY attnum ASC"} []
[2022-05-17T18:08:23.931893+03:00] doctrine.DEBUG: Executing query: SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment; {"sql":"SELECT obj_description('doctrine_migration_versions'::regclass) AS table_comment;"} []
[2022-05-17T18:08:24.261685+03:00] doctrine.DEBUG: Executing query: SELECT * FROM doctrine_migration_versions {"sql":"SELECT * FROM doctrine_migration_versions"} []
[2022-05-17T18:08:24.606539+03:00] doctrine.DEBUG: Executing query: SELECT CURRENT_DATABASE() {"sql":"SELECT CURRENT_DATABASE()"} []
[2022-05-17T18:08:24.973667+03:00] doctrine.INFO: Disconnecting [] []
[2022-05-17T18:08:25.102214+03:00] request.INFO: Matched route "_wdt". {"route":"_wdt","route_parameters":{"_route":"_wdt","_controller":"web_profiler.controller.profiler::toolbarAction","token":"2b4096"},"request_uri":"https://localhost:8000/_wdt/2b4096","method":"GET"} []
